/**
 * OpenAPI definition
 * # Exciting News  Hey there, amazing developers! üëã  We\'ve got some fantastic news to share that will make your experience with our product even better. We\'re thrilled to announce the implementation of API-Keys, which brings a new level of control and convenience to your development process. So, let\'s dive right into the details! ‚ú®  ## API-Keys for Enhanced Functionality üîë  Starting now, we have introduced API-Keys to streamline your interactions with our methods. You might have noticed a slight change while making requests ‚Äì now, all you need to do is include the parameter `X-API-KEY` in the Header of your request. Simple as that!  ## Get Your API-Key in a Snap! ‚ö°Ô∏è  Securing your API-Key is a breeze. We\'ve made the process super user-friendly to ensure you can get started quickly. Just head over to our website and fill out a simple form. Once you\'ve done that, your shiny new API-Key will be delivered straight to your email inbox. Easy peasy! üìß  [Get Your API-Key Here](https://api.rarible.org/registration) [Configure SDK with API-key](https://github.com/rarible/sdk#api-querying)  ## Unlock the Power of the Rarible Protocol üîì  As passionate developers, we know you\'re always hungry for knowledge and eager to explore new frontiers. That\'s why we invite you to discover the incredible world of the Rarible Protocol. By visiting our dedicated protocol page, you\'ll gain access to a treasure trove of useful information, tips, and insights that will elevate your development skills to new heights. üöÄ  [Explore the Rarible Protocol](https://rarible.org)  So, buckle up and get ready for an enhanced development journey with our API-Keys. We\'re excited to see what you\'ll create using our revamped system! üí™üöÄ  Stay curious, keep innovating, and happy coding! ‚ú®  [P.S. Join our Discord Server to stay up to date and ask questions](https://discord.gg/rarifoundation)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { OlapBidsByPriceSort, OlapBidsByPriceStatistics, OlapError, OlapGlobalCollectionStatisticsResponse, OlapOwnerStatistics, OlapPeriod, OlapPeriodCollectionStatisticsResponse, OlapPeriodCollectionsByIdsStatisticsRequest } from '../models';
export interface GetBidsByPriceRequest {
    id: string;
    continuation?: string;
    size?: number;
    sort?: OlapBidsByPriceSort;
}
export interface GetGlobalCollectionStatisticsRequest {
    id: string;
}
export interface GetGlobalCollectionStatisticsByIdsRequest {
    requestBody: Array<string>;
}
export interface GetOwnersRequest {
    id: string;
    continuation?: string;
    size?: number;
}
export interface GetPeriodCollectionStatisticsRequest {
    id: string;
    period: OlapPeriod;
}
export interface GetPeriodCollectionStatisticsByIdsRequest {
    olapPeriodCollectionsByIdsStatisticsRequest: OlapPeriodCollectionsByIdsStatisticsRequest;
}
/**
 * no description
 */
export declare class CollectionStatisticsControllerApi extends runtime.BaseAPI {
    /**
     * Returns list of bid prices with number of bids and bidders
     * Get distribution of the number of bids by price
     */
    getBidsByPriceRaw(requestParameters: GetBidsByPriceRequest): Promise<GetBidsByPriceResponse>;
    /**
     * Returns list of bid prices with number of bids and bidders
     * Get distribution of the number of bids by price
     */
    getBidsByPrice(requestParameters: GetBidsByPriceRequest): Promise<OlapBidsByPriceStatistics>;
    /**
     * Global collection statistics by ID
     * Get global (period-independent) statistics by collection ID
     */
    getGlobalCollectionStatisticsRaw(requestParameters: GetGlobalCollectionStatisticsRequest): Promise<GetGlobalCollectionStatisticsResponse>;
    /**
     * Global collection statistics by ID
     * Get global (period-independent) statistics by collection ID
     */
    getGlobalCollectionStatistics(requestParameters: GetGlobalCollectionStatisticsRequest): Promise<OlapGlobalCollectionStatisticsResponse>;
    /**
     * Global collection statistics by IDs
     * Get global (period-independent) statistics by collection IDs
     */
    getGlobalCollectionStatisticsByIdsRaw(requestParameters: GetGlobalCollectionStatisticsByIdsRequest): Promise<GetGlobalCollectionStatisticsByIdsResponse>;
    /**
     * Global collection statistics by IDs
     * Get global (period-independent) statistics by collection IDs
     */
    getGlobalCollectionStatisticsByIds(requestParameters: GetGlobalCollectionStatisticsByIdsRequest): Promise<Array<OlapGlobalCollectionStatisticsResponse>>;
    /**
     * Returns list of owners of items in the collection along with the number of owned items
     * Get distribution of the number of owned items by owner
     */
    getOwnersRaw(requestParameters: GetOwnersRequest): Promise<GetOwnersResponse>;
    /**
     * Returns list of owners of items in the collection along with the number of owned items
     * Get distribution of the number of owned items by owner
     */
    getOwners(requestParameters: GetOwnersRequest): Promise<OlapOwnerStatistics>;
    /**
     * Period-based collection statistics by ID
     * Get period-based statistics by collection ID
     */
    getPeriodCollectionStatisticsRaw(requestParameters: GetPeriodCollectionStatisticsRequest): Promise<GetPeriodCollectionStatisticsResponse>;
    /**
     * Period-based collection statistics by ID
     * Get period-based statistics by collection ID
     */
    getPeriodCollectionStatistics(requestParameters: GetPeriodCollectionStatisticsRequest): Promise<OlapPeriodCollectionStatisticsResponse>;
    /**
     * Period-based collection statistics by IDs
     * Get period-based statistics by collection IDs
     */
    getPeriodCollectionStatisticsByIdsRaw(requestParameters: GetPeriodCollectionStatisticsByIdsRequest): Promise<GetPeriodCollectionStatisticsByIdsResponse>;
    /**
     * Period-based collection statistics by IDs
     * Get period-based statistics by collection IDs
     */
    getPeriodCollectionStatisticsByIds(requestParameters: GetPeriodCollectionStatisticsByIdsRequest): Promise<Array<OlapPeriodCollectionStatisticsResponse>>;
}
export type GetBidsByPrice200 = {
    status: 200;
    value: OlapBidsByPriceStatistics;
};
export type GetBidsByPrice400 = {
    status: 400;
    value: OlapError;
};
export type GetBidsByPrice404 = {
    status: 404;
    value: OlapError;
};
export type GetBidsByPrice500 = {
    status: 500;
    value: OlapError;
};
export type GetBidsByPriceResponse = GetBidsByPrice200 | GetBidsByPrice400 | GetBidsByPrice404 | GetBidsByPrice500;
export type GetGlobalCollectionStatistics200 = {
    status: 200;
    value: OlapGlobalCollectionStatisticsResponse;
};
export type GetGlobalCollectionStatistics400 = {
    status: 400;
    value: OlapError;
};
export type GetGlobalCollectionStatistics500 = {
    status: 500;
    value: OlapError;
};
export type GetGlobalCollectionStatisticsResponse = GetGlobalCollectionStatistics200 | GetGlobalCollectionStatistics400 | GetGlobalCollectionStatistics500;
export type GetGlobalCollectionStatisticsByIds200 = {
    status: 200;
    value: Array<OlapGlobalCollectionStatisticsResponse>;
};
export type GetGlobalCollectionStatisticsByIds400 = {
    status: 400;
    value: OlapError;
};
export type GetGlobalCollectionStatisticsByIds500 = {
    status: 500;
    value: OlapError;
};
export type GetGlobalCollectionStatisticsByIdsResponse = GetGlobalCollectionStatisticsByIds200 | GetGlobalCollectionStatisticsByIds400 | GetGlobalCollectionStatisticsByIds500;
export type GetOwners200 = {
    status: 200;
    value: OlapOwnerStatistics;
};
export type GetOwners400 = {
    status: 400;
    value: OlapError;
};
export type GetOwners404 = {
    status: 404;
    value: OlapError;
};
export type GetOwners500 = {
    status: 500;
    value: OlapError;
};
export type GetOwnersResponse = GetOwners200 | GetOwners400 | GetOwners404 | GetOwners500;
export type GetPeriodCollectionStatistics200 = {
    status: 200;
    value: OlapPeriodCollectionStatisticsResponse;
};
export type GetPeriodCollectionStatistics400 = {
    status: 400;
    value: OlapError;
};
export type GetPeriodCollectionStatistics500 = {
    status: 500;
    value: OlapError;
};
export type GetPeriodCollectionStatisticsResponse = GetPeriodCollectionStatistics200 | GetPeriodCollectionStatistics400 | GetPeriodCollectionStatistics500;
export type GetPeriodCollectionStatisticsByIds200 = {
    status: 200;
    value: Array<OlapPeriodCollectionStatisticsResponse>;
};
export type GetPeriodCollectionStatisticsByIds400 = {
    status: 400;
    value: OlapError;
};
export type GetPeriodCollectionStatisticsByIds500 = {
    status: 500;
    value: OlapError;
};
export type GetPeriodCollectionStatisticsByIdsResponse = GetPeriodCollectionStatisticsByIds200 | GetPeriodCollectionStatisticsByIds400 | GetPeriodCollectionStatisticsByIds500;
