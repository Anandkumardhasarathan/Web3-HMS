/**
 * OpenAPI definition
 * # Exciting News  Hey there, amazing developers! üëã  We\'ve got some fantastic news to share that will make your experience with our product even better. We\'re thrilled to announce the implementation of API-Keys, which brings a new level of control and convenience to your development process. So, let\'s dive right into the details! ‚ú®  ## API-Keys for Enhanced Functionality üîë  Starting now, we have introduced API-Keys to streamline your interactions with our methods. You might have noticed a slight change while making requests ‚Äì now, all you need to do is include the parameter `X-API-KEY` in the Header of your request. Simple as that!  ## Get Your API-Key in a Snap! ‚ö°Ô∏è  Securing your API-Key is a breeze. We\'ve made the process super user-friendly to ensure you can get started quickly. Just head over to our website and fill out a simple form. Once you\'ve done that, your shiny new API-Key will be delivered straight to your email inbox. Easy peasy! üìß  [Get Your API-Key Here](https://api.rarible.org/registration) [Configure SDK with API-key](https://github.com/rarible/sdk#api-querying)  ## Unlock the Power of the Rarible Protocol üîì  As passionate developers, we know you\'re always hungry for knowledge and eager to explore new frontiers. That\'s why we invite you to discover the incredible world of the Rarible Protocol. By visiting our dedicated protocol page, you\'ll gain access to a treasure trove of useful information, tips, and insights that will elevate your development skills to new heights. üöÄ  [Explore the Rarible Protocol](https://rarible.org)  So, buckle up and get ready for an enhanced development journey with our API-Keys. We\'re excited to see what you\'ll create using our revamped system! üí™üöÄ  Stay curious, keep innovating, and happy coding! ‚ú®  [P.S. Join our Discord Server to stay up to date and ask questions](https://discord.gg/rarifoundation)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { OlapBlockchain, OlapCollectionStatisticsResponse, OlapCollectionVolumeRankingResponse, OlapCurrencyType, OlapError, OlapGeneralStatsResponse, OlapLeaderboardPeriod, OlapPeriod, OlapPlatformSource, OlapStatsGraphResponse, OlapTradesLeaderboardSort, OlapTradesLeaderboardSourceGroup, OlapUserType, OlapUserVolumeRankingResponse } from '../models';
export interface GetBuyersRequest {
    collection: string;
    filters?: string;
}
export interface GetCollectionRankingByVolumeRequest {
    source?: OlapTradesLeaderboardSourceGroup;
    blockchain?: OlapBlockchain;
    ids?: Array<string>;
    period?: OlapLeaderboardPeriod;
    minFloorPriceNative?: number;
    maxFloorPriceNative?: number;
    sort?: OlapTradesLeaderboardSort;
    limit?: number;
    continuation?: string;
}
export interface GetCollectionStatisticsRequest {
    collection: string;
}
export interface GetCollectionStatsRequest {
    collection: string;
    currency?: OlapCurrencyType;
}
export interface GetFloorPriceRequest {
    collection: string;
    currency?: OlapCurrencyType;
    filters?: string;
}
export interface GetGmvRequest {
    collection: string;
    currency?: OlapCurrencyType;
    period?: OlapPeriod;
    filters?: string;
}
export interface GetListedRequest {
    collection: string;
}
export interface GetSellersRequest {
    collection: string;
    filters?: string;
}
export interface GetTransactionsRequest {
    collection: string;
    filters?: string;
}
export interface GetUserRankingByVolumeRequest {
    entity: OlapUserType;
    blockchain?: OlapBlockchain;
    source?: OlapPlatformSource;
    period?: OlapLeaderboardPeriod;
    limit?: number;
}
/**
 * no description
 */
export declare class DataControllerApi extends runtime.BaseAPI {
    /**
     * Get historical statistics about Collection buyers
     * Get NFT Collection buyer stats
     */
    getBuyersRaw(requestParameters: GetBuyersRequest): Promise<GetBuyersResponse>;
    /**
     * Get historical statistics about Collection buyers
     * Get NFT Collection buyer stats
     */
    getBuyers(requestParameters: GetBuyersRequest): Promise<OlapStatsGraphResponse>;
    /**
     * Collections leaderboard by trade activity
     * Get NFT Collections volume
     */
    getCollectionRankingByVolumeRaw(requestParameters: GetCollectionRankingByVolumeRequest): Promise<GetCollectionRankingByVolumeResponse>;
    /**
     * Collections leaderboard by trade activity
     * Get NFT Collections volume
     */
    getCollectionRankingByVolume(requestParameters: GetCollectionRankingByVolumeRequest): Promise<OlapCollectionVolumeRankingResponse>;
    /**
     * Get statistics about a collection
     * Get NFT Collection statistics
     */
    getCollectionStatisticsRaw(requestParameters: GetCollectionStatisticsRequest): Promise<GetCollectionStatisticsResponse>;
    /**
     * Get statistics about a collection
     * Get NFT Collection statistics
     */
    getCollectionStatistics(requestParameters: GetCollectionStatisticsRequest): Promise<OlapCollectionStatisticsResponse>;
    /**
     * Get general statistics about Collection
     * Get NFT Collection stats
     */
    getCollectionStatsRaw(requestParameters: GetCollectionStatsRequest): Promise<GetCollectionStatsResponse>;
    /**
     * Get general statistics about Collection
     * Get NFT Collection stats
     */
    getCollectionStats(requestParameters: GetCollectionStatsRequest): Promise<OlapGeneralStatsResponse>;
    /**
     * Get historical statistics about Collection\'s NFT floor price
     * Get NFT Collection floor price
     */
    getFloorPriceRaw(requestParameters: GetFloorPriceRequest): Promise<GetFloorPriceResponse>;
    /**
     * Get historical statistics about Collection\'s NFT floor price
     * Get NFT Collection floor price
     */
    getFloorPrice(requestParameters: GetFloorPriceRequest): Promise<OlapStatsGraphResponse>;
    /**
     * Get historical statistics about Collection gross merchandise value
     * Get NFT Collections GVM
     */
    getGmvRaw(requestParameters: GetGmvRequest): Promise<GetGmvResponse>;
    /**
     * Get historical statistics about Collection gross merchandise value
     * Get NFT Collections GVM
     */
    getGmv(requestParameters: GetGmvRequest): Promise<OlapStatsGraphResponse>;
    /**
     * Get historical statistics of collection listed count
     * Get NFT Collection listing stats
     */
    getListedRaw(requestParameters: GetListedRequest): Promise<GetListedResponse>;
    /**
     * Get historical statistics of collection listed count
     * Get NFT Collection listing stats
     */
    getListed(requestParameters: GetListedRequest): Promise<OlapStatsGraphResponse>;
    /**
     * Get historical statistics about Collection sellers
     * Get NFT Collection seller stats
     */
    getSellersRaw(requestParameters: GetSellersRequest): Promise<GetSellersResponse>;
    /**
     * Get historical statistics about Collection sellers
     * Get NFT Collection seller stats
     */
    getSellers(requestParameters: GetSellersRequest): Promise<OlapStatsGraphResponse>;
    /**
     * Get historical statistics about Collection transactions
     * Get NFT Collection tx stats
     */
    getTransactionsRaw(requestParameters: GetTransactionsRequest): Promise<GetTransactionsResponse>;
    /**
     * Get historical statistics about Collection transactions
     * Get NFT Collection tx stats
     */
    getTransactions(requestParameters: GetTransactionsRequest): Promise<OlapStatsGraphResponse>;
    /**
     * Users (top buyers/sellers) leaderboard. Calculated as traded worth for the period.
     * Get user volume
     */
    getUserRankingByVolumeRaw(requestParameters: GetUserRankingByVolumeRequest): Promise<GetUserRankingByVolumeResponse>;
    /**
     * Users (top buyers/sellers) leaderboard. Calculated as traded worth for the period.
     * Get user volume
     */
    getUserRankingByVolume(requestParameters: GetUserRankingByVolumeRequest): Promise<OlapUserVolumeRankingResponse>;
}
export type GetBuyers200 = {
    status: 200;
    value: OlapStatsGraphResponse;
};
export type GetBuyers400 = {
    status: 400;
    value: OlapError;
};
export type GetBuyers404 = {
    status: 404;
    value: OlapError;
};
export type GetBuyers500 = {
    status: 500;
    value: OlapError;
};
export type GetBuyersResponse = GetBuyers200 | GetBuyers400 | GetBuyers404 | GetBuyers500;
export type GetCollectionRankingByVolume200 = {
    status: 200;
    value: OlapCollectionVolumeRankingResponse;
};
export type GetCollectionRankingByVolume400 = {
    status: 400;
    value: OlapError;
};
export type GetCollectionRankingByVolume500 = {
    status: 500;
    value: OlapError;
};
export type GetCollectionRankingByVolumeResponse = GetCollectionRankingByVolume200 | GetCollectionRankingByVolume400 | GetCollectionRankingByVolume500;
export type GetCollectionStatistics200 = {
    status: 200;
    value: OlapCollectionStatisticsResponse;
};
export type GetCollectionStatistics400 = {
    status: 400;
    value: OlapError;
};
export type GetCollectionStatistics404 = {
    status: 404;
    value: OlapError;
};
export type GetCollectionStatistics500 = {
    status: 500;
    value: OlapError;
};
export type GetCollectionStatisticsResponse = GetCollectionStatistics200 | GetCollectionStatistics400 | GetCollectionStatistics404 | GetCollectionStatistics500;
export type GetCollectionStats200 = {
    status: 200;
    value: OlapGeneralStatsResponse;
};
export type GetCollectionStats400 = {
    status: 400;
    value: OlapError;
};
export type GetCollectionStats404 = {
    status: 404;
    value: OlapError;
};
export type GetCollectionStats500 = {
    status: 500;
    value: OlapError;
};
export type GetCollectionStatsResponse = GetCollectionStats200 | GetCollectionStats400 | GetCollectionStats404 | GetCollectionStats500;
export type GetFloorPrice200 = {
    status: 200;
    value: OlapStatsGraphResponse;
};
export type GetFloorPrice400 = {
    status: 400;
    value: OlapError;
};
export type GetFloorPrice404 = {
    status: 404;
    value: OlapError;
};
export type GetFloorPrice500 = {
    status: 500;
    value: OlapError;
};
export type GetFloorPriceResponse = GetFloorPrice200 | GetFloorPrice400 | GetFloorPrice404 | GetFloorPrice500;
export type GetGmv200 = {
    status: 200;
    value: OlapStatsGraphResponse;
};
export type GetGmv400 = {
    status: 400;
    value: OlapError;
};
export type GetGmv404 = {
    status: 404;
    value: OlapError;
};
export type GetGmv500 = {
    status: 500;
    value: OlapError;
};
export type GetGmvResponse = GetGmv200 | GetGmv400 | GetGmv404 | GetGmv500;
export type GetListed200 = {
    status: 200;
    value: OlapStatsGraphResponse;
};
export type GetListed400 = {
    status: 400;
    value: OlapError;
};
export type GetListed404 = {
    status: 404;
    value: OlapError;
};
export type GetListed500 = {
    status: 500;
    value: OlapError;
};
export type GetListedResponse = GetListed200 | GetListed400 | GetListed404 | GetListed500;
export type GetSellers200 = {
    status: 200;
    value: OlapStatsGraphResponse;
};
export type GetSellers400 = {
    status: 400;
    value: OlapError;
};
export type GetSellers404 = {
    status: 404;
    value: OlapError;
};
export type GetSellers500 = {
    status: 500;
    value: OlapError;
};
export type GetSellersResponse = GetSellers200 | GetSellers400 | GetSellers404 | GetSellers500;
export type GetTransactions200 = {
    status: 200;
    value: OlapStatsGraphResponse;
};
export type GetTransactions400 = {
    status: 400;
    value: OlapError;
};
export type GetTransactions404 = {
    status: 404;
    value: OlapError;
};
export type GetTransactions500 = {
    status: 500;
    value: OlapError;
};
export type GetTransactionsResponse = GetTransactions200 | GetTransactions400 | GetTransactions404 | GetTransactions500;
export type GetUserRankingByVolume200 = {
    status: 200;
    value: OlapUserVolumeRankingResponse;
};
export type GetUserRankingByVolume400 = {
    status: 400;
    value: OlapError;
};
export type GetUserRankingByVolume500 = {
    status: 500;
    value: OlapError;
};
export type GetUserRankingByVolumeResponse = GetUserRankingByVolume200 | GetUserRankingByVolume400 | GetUserRankingByVolume500;
