/**
 * OpenAPI definition
 * # Exciting News  Hey there, amazing developers! üëã  We\'ve got some fantastic news to share that will make your experience with our product even better. We\'re thrilled to announce the implementation of API-Keys, which brings a new level of control and convenience to your development process. So, let\'s dive right into the details! ‚ú®  ## API-Keys for Enhanced Functionality üîë  Starting now, we have introduced API-Keys to streamline your interactions with our methods. You might have noticed a slight change while making requests ‚Äì now, all you need to do is include the parameter `X-API-KEY` in the Header of your request. Simple as that!  ## Get Your API-Key in a Snap! ‚ö°Ô∏è  Securing your API-Key is a breeze. We\'ve made the process super user-friendly to ensure you can get started quickly. Just head over to our website and fill out a simple form. Once you\'ve done that, your shiny new API-Key will be delivered straight to your email inbox. Easy peasy! üìß  [Get Your API-Key Here](https://api.rarible.org/registration) [Configure SDK with API-key](https://github.com/rarible/sdk#api-querying)  ## Unlock the Power of the Rarible Protocol üîì  As passionate developers, we know you\'re always hungry for knowledge and eager to explore new frontiers. That\'s why we invite you to discover the incredible world of the Rarible Protocol. By visiting our dedicated protocol page, you\'ll gain access to a treasure trove of useful information, tips, and insights that will elevate your development skills to new heights. üöÄ  [Explore the Rarible Protocol](https://rarible.org)  So, buckle up and get ready for an enhanced development journey with our API-Keys. We\'re excited to see what you\'ll create using our revamped system! üí™üöÄ  Stay curious, keep innovating, and happy coding! ‚ú®  [P.S. Join our Discord Server to stay up to date and ask questions](https://discord.gg/rarifoundation)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Blockchain, ExtendedTraitProperties, Item, ItemIds, Items, ItemsWithOwnership, LazyItem, LazyItemBurnForm, LazyItemMintForm, Royalties, SearchEngine, Traits, TraitsRarityRequest, UnionApiErrorBadRequest, UnionApiErrorEntityNotFound, UnionApiErrorServerError } from '../models';
export interface BurnLazyItemRequest {
    lazyItemBurnForm: LazyItemBurnForm;
}
export interface GetAllItemsRequest {
    blockchains?: Array<Blockchain>;
    continuation?: string;
    size?: number;
    showDeleted?: boolean;
    lastUpdatedFrom?: number;
    lastUpdatedTo?: number;
    searchEngine?: SearchEngine;
}
export interface GetItemByIdRequest {
    itemId: string;
}
export interface GetItemByIdsRequest {
    itemIds: ItemIds;
}
export interface GetItemRoyaltiesByIdRequest {
    itemId: string;
}
export interface GetItemsByCollectionRequest {
    collection: string;
    continuation?: string;
    size?: number;
    searchEngine?: SearchEngine;
}
export interface GetItemsByCreatorRequest {
    creator: string;
    blockchains?: Array<Blockchain>;
    continuation?: string;
    size?: number;
    searchEngine?: SearchEngine;
}
export interface GetItemsByOwnerRequest {
    owner: string;
    blockchains?: Array<Blockchain>;
    continuation?: string;
    size?: number;
    searchEngine?: SearchEngine;
}
export interface GetItemsByOwnerWithOwnershipRequest {
    owner: string;
    continuation?: string;
    size?: number;
    searchEngine?: SearchEngine;
}
export interface GetLazyItemByIdRequest {
    itemId: string;
}
export interface MintLazyItemRequest {
    lazyItemMintForm: LazyItemMintForm;
}
export interface QueryTraitsRequest {
    collectionIds: Array<string>;
    keys?: Array<string>;
    owners?: Array<string>;
}
export interface QueryTraitsWithRarityRequest {
    traitsRarityRequest: TraitsRarityRequest;
}
export interface ResetItemMetaRequest {
    itemId: string;
    sync?: boolean;
}
/**
 * no description
 */
export declare class ItemControllerApi extends runtime.BaseAPI {
    /**
     * Deletes Lazy NFT (supported only for some blockchains)
     * Burn Lazy NFT
     */
    burnLazyItemRaw(requestParameters: BurnLazyItemRequest): Promise<BurnLazyItemResponse>;
    /**
     * Deletes Lazy NFT (supported only for some blockchains)
     * Burn Lazy NFT
     */
    burnLazyItem(requestParameters: BurnLazyItemRequest): Promise<void>;
    /**
     * Returns all NFT Items in accordance with specified filters and sorted by `last updated` date
     * Get all NFTs
     */
    getAllItemsRaw(requestParameters: GetAllItemsRequest): Promise<GetAllItemsResponse>;
    /**
     * Returns all NFT Items in accordance with specified filters and sorted by `last updated` date
     * Get all NFTs
     */
    getAllItems(requestParameters: GetAllItemsRequest): Promise<Items>;
    /**
     * Returns NFT Item by Id
     * Get NFT by Id
     */
    getItemByIdRaw(requestParameters: GetItemByIdRequest): Promise<GetItemByIdResponse>;
    /**
     * Returns NFT Item by Id
     * Get NFT by Id
     */
    getItemById(requestParameters: GetItemByIdRequest): Promise<Item>;
    /**
     * Returns NFT Items by specified list of Ids
     * Get NFT by Ids
     */
    getItemByIdsRaw(requestParameters: GetItemByIdsRequest): Promise<GetItemByIdsResponse>;
    /**
     * Returns NFT Items by specified list of Ids
     * Get NFT by Ids
     */
    getItemByIds(requestParameters: GetItemByIdsRequest): Promise<Items>;
    /**
     * Returns NFT royalties by Id
     * Get NFT royalties by Id
     */
    getItemRoyaltiesByIdRaw(requestParameters: GetItemRoyaltiesByIdRequest): Promise<GetItemRoyaltiesByIdResponse>;
    /**
     * Returns NFT royalties by Id
     * Get NFT royalties by Id
     */
    getItemRoyaltiesById(requestParameters: GetItemRoyaltiesByIdRequest): Promise<Royalties>;
    /**
     * Returns list of NFTs from specified collection and sorted by `last updated` date
     * Get NFT from collection
     */
    getItemsByCollectionRaw(requestParameters: GetItemsByCollectionRequest): Promise<GetItemsByCollectionResponse>;
    /**
     * Returns list of NFTs from specified collection and sorted by `last updated` date
     * Get NFT from collection
     */
    getItemsByCollection(requestParameters: GetItemsByCollectionRequest): Promise<Items>;
    /**
     * Returns list of NFTs created by specified user and sorted by `last updated` date
     * Get NFT created by user
     */
    getItemsByCreatorRaw(requestParameters: GetItemsByCreatorRequest): Promise<GetItemsByCreatorResponse>;
    /**
     * Returns list of NFTs created by specified user and sorted by `last updated` date
     * Get NFT created by user
     */
    getItemsByCreator(requestParameters: GetItemsByCreatorRequest): Promise<Items>;
    /**
     * Returns list of NFTs belong to specified user and sorted by `last updated` date
     * Get NFT owned by user
     */
    getItemsByOwnerRaw(requestParameters: GetItemsByOwnerRequest): Promise<GetItemsByOwnerResponse>;
    /**
     * Returns list of NFTs belong to specified user and sorted by `last updated` date
     * Get NFT owned by user
     */
    getItemsByOwner(requestParameters: GetItemsByOwnerRequest): Promise<Items>;
    /**
     * Returns list of NFTs belong to specified user and sorted by `last updated` date of ownership
     * Get NFT owned by user - detailed
     */
    getItemsByOwnerWithOwnershipRaw(requestParameters: GetItemsByOwnerWithOwnershipRequest): Promise<GetItemsByOwnerWithOwnershipResponse>;
    /**
     * Returns list of NFTs belong to specified user and sorted by `last updated` date of ownership
     * Get NFT owned by user - detailed
     */
    getItemsByOwnerWithOwnership(requestParameters: GetItemsByOwnerWithOwnershipRequest): Promise<ItemsWithOwnership>;
    /**
     * Returns Lazy NFT Item by Id
     * Get Lazy NFT
     */
    getLazyItemByIdRaw(requestParameters: GetLazyItemByIdRequest): Promise<GetLazyItemByIdResponse>;
    /**
     * Returns Lazy NFT Item by Id
     * Get Lazy NFT
     */
    getLazyItemById(requestParameters: GetLazyItemByIdRequest): Promise<LazyItem>;
    /**
     * Create Lazy NFT (supported only for some blockchains)
     * Mint Lazy NFT
     */
    mintLazyItemRaw(requestParameters: MintLazyItemRequest): Promise<MintLazyItemResponse>;
    /**
     * Create Lazy NFT (supported only for some blockchains)
     * Mint Lazy NFT
     */
    mintLazyItem(requestParameters: MintLazyItemRequest): Promise<Item>;
    /**
     * Returns aggregation of existing traits for specified collections with counter for each trait type/value.
     * Get NFT collection traits
     */
    queryTraitsRaw(requestParameters: QueryTraitsRequest): Promise<QueryTraitsResponse>;
    /**
     * Returns aggregation of existing traits for specified collections with counter for each trait type/value.
     * Get NFT collection traits
     */
    queryTraits(requestParameters: QueryTraitsRequest): Promise<Traits>;
    /**
     * Returns the rarity of the trait
     * Get NFT traits rarity
     */
    queryTraitsWithRarityRaw(requestParameters: QueryTraitsWithRarityRequest): Promise<QueryTraitsWithRarityResponse>;
    /**
     * Returns the rarity of the trait
     * Get NFT traits rarity
     */
    queryTraitsWithRarity(requestParameters: QueryTraitsWithRarityRequest): Promise<ExtendedTraitProperties>;
    /**
     * Reloads NFT metadata from the source. If source not available, old metadata stays.
     * Reset NFT metadata
     */
    resetItemMetaRaw(requestParameters: ResetItemMetaRequest): Promise<ResetItemMetaResponse>;
    /**
     * Reloads NFT metadata from the source. If source not available, old metadata stays.
     * Reset NFT metadata
     */
    resetItemMeta(requestParameters: ResetItemMetaRequest): Promise<void>;
}
export type BurnLazyItem204 = {
    status: 204;
};
export type BurnLazyItem400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type BurnLazyItem404 = {
    status: 404;
    value: UnionApiErrorEntityNotFound;
};
export type BurnLazyItem500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type BurnLazyItemResponse = BurnLazyItem204 | BurnLazyItem400 | BurnLazyItem404 | BurnLazyItem500;
export type GetAllItems200 = {
    status: 200;
    value: Items;
};
export type GetAllItems400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetAllItems500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetAllItemsResponse = GetAllItems200 | GetAllItems400 | GetAllItems500;
export type GetItemById200 = {
    status: 200;
    value: Item;
};
export type GetItemById404 = {
    status: 404;
    value: UnionApiErrorEntityNotFound;
};
export type GetItemById400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetItemById500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetItemByIdResponse = GetItemById200 | GetItemById404 | GetItemById400 | GetItemById500;
export type GetItemByIds200 = {
    status: 200;
    value: Items;
};
export type GetItemByIds404 = {
    status: 404;
    value: UnionApiErrorEntityNotFound;
};
export type GetItemByIds400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetItemByIds500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetItemByIdsResponse = GetItemByIds200 | GetItemByIds404 | GetItemByIds400 | GetItemByIds500;
export type GetItemRoyaltiesById200 = {
    status: 200;
    value: Royalties;
};
export type GetItemRoyaltiesById400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetItemRoyaltiesById500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetItemRoyaltiesByIdResponse = GetItemRoyaltiesById200 | GetItemRoyaltiesById400 | GetItemRoyaltiesById500;
export type GetItemsByCollection200 = {
    status: 200;
    value: Items;
};
export type GetItemsByCollection400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetItemsByCollection500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetItemsByCollectionResponse = GetItemsByCollection200 | GetItemsByCollection400 | GetItemsByCollection500;
export type GetItemsByCreator200 = {
    status: 200;
    value: Items;
};
export type GetItemsByCreator400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetItemsByCreator500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetItemsByCreatorResponse = GetItemsByCreator200 | GetItemsByCreator400 | GetItemsByCreator500;
export type GetItemsByOwner200 = {
    status: 200;
    value: Items;
};
export type GetItemsByOwner400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetItemsByOwner500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetItemsByOwnerResponse = GetItemsByOwner200 | GetItemsByOwner400 | GetItemsByOwner500;
export type GetItemsByOwnerWithOwnership200 = {
    status: 200;
    value: ItemsWithOwnership;
};
export type GetItemsByOwnerWithOwnership400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetItemsByOwnerWithOwnership500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetItemsByOwnerWithOwnershipResponse = GetItemsByOwnerWithOwnership200 | GetItemsByOwnerWithOwnership400 | GetItemsByOwnerWithOwnership500;
export type GetLazyItemById200 = {
    status: 200;
    value: LazyItem;
};
export type GetLazyItemById404 = {
    status: 404;
    value: UnionApiErrorEntityNotFound;
};
export type GetLazyItemById400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type GetLazyItemById500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type GetLazyItemByIdResponse = GetLazyItemById200 | GetLazyItemById404 | GetLazyItemById400 | GetLazyItemById500;
export type MintLazyItem200 = {
    status: 200;
    value: Item;
};
export type MintLazyItem400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type MintLazyItem404 = {
    status: 404;
    value: UnionApiErrorEntityNotFound;
};
export type MintLazyItem500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type MintLazyItemResponse = MintLazyItem200 | MintLazyItem400 | MintLazyItem404 | MintLazyItem500;
export type QueryTraits200 = {
    status: 200;
    value: Traits;
};
export type QueryTraits400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type QueryTraits500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type QueryTraitsResponse = QueryTraits200 | QueryTraits400 | QueryTraits500;
export type QueryTraitsWithRarity200 = {
    status: 200;
    value: ExtendedTraitProperties;
};
export type QueryTraitsWithRarityResponse = QueryTraitsWithRarity200;
export type ResetItemMeta200 = {
    status: 200;
};
export type ResetItemMeta400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type ResetItemMeta500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type ResetItemMetaResponse = ResetItemMeta200 | ResetItemMeta400 | ResetItemMeta500;
