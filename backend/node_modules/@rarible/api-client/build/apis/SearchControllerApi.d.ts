/**
 * OpenAPI definition
 * # Exciting News  Hey there, amazing developers! üëã  We\'ve got some fantastic news to share that will make your experience with our product even better. We\'re thrilled to announce the implementation of API-Keys, which brings a new level of control and convenience to your development process. So, let\'s dive right into the details! ‚ú®  ## API-Keys for Enhanced Functionality üîë  Starting now, we have introduced API-Keys to streamline your interactions with our methods. You might have noticed a slight change while making requests ‚Äì now, all you need to do is include the parameter `X-API-KEY` in the Header of your request. Simple as that!  ## Get Your API-Key in a Snap! ‚ö°Ô∏è  Securing your API-Key is a breeze. We\'ve made the process super user-friendly to ensure you can get started quickly. Just head over to our website and fill out a simple form. Once you\'ve done that, your shiny new API-Key will be delivered straight to your email inbox. Easy peasy! üìß  [Get Your API-Key Here](https://api.rarible.org/registration) [Configure SDK with API-key](https://github.com/rarible/sdk#api-querying)  ## Unlock the Power of the Rarible Protocol üîì  As passionate developers, we know you\'re always hungry for knowledge and eager to explore new frontiers. That\'s why we invite you to discover the incredible world of the Rarible Protocol. By visiting our dedicated protocol page, you\'ll gain access to a treasure trove of useful information, tips, and insights that will elevate your development skills to new heights. üöÄ  [Explore the Rarible Protocol](https://rarible.org)  So, buckle up and get ready for an enhanced development journey with our API-Keys. We\'re excited to see what you\'ll create using our revamped system! üí™üöÄ  Stay curious, keep innovating, and happy coding! ‚ú®  [P.S. Join our Discord Server to stay up to date and ask questions](https://discord.gg/rarifoundation)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Activities, ActivitySearchRequest, Collections, CollectionsSearchRequest, Items, ItemsSearchRequest, OwnershipSearchRequest, Ownerships, Traits, UnionApiErrorBadRequest, UnionApiErrorServerError } from '../models';
export interface SearchActivitiesRequest {
    activitySearchRequest: ActivitySearchRequest;
}
export interface SearchCollectionRequest {
    collectionsSearchRequest: CollectionsSearchRequest;
}
export interface SearchItemsRequest {
    itemsSearchRequest: ItemsSearchRequest;
}
export interface SearchOwnershipsRequest {
    ownershipSearchRequest: OwnershipSearchRequest;
}
export interface SearchTraitsRequest {
    filter: string;
    collectionIds: Array<string>;
    owners?: Array<string>;
}
/**
 * no description
 */
export declare class SearchControllerApi extends runtime.BaseAPI {
    /**
     * Advanced search returns Activities satisfying provided filter
     * Search Activities
     */
    searchActivitiesRaw(requestParameters: SearchActivitiesRequest): Promise<SearchActivitiesResponse>;
    /**
     * Advanced search returns Activities satisfying provided filter
     * Search Activities
     */
    searchActivities(requestParameters: SearchActivitiesRequest): Promise<Activities>;
    /**
     * Advanced search returns NFT Collections satisfying provided filter
     * Search NFT Collections
     */
    searchCollectionRaw(requestParameters: SearchCollectionRequest): Promise<SearchCollectionResponse>;
    /**
     * Advanced search returns NFT Collections satisfying provided filter
     * Search NFT Collections
     */
    searchCollection(requestParameters: SearchCollectionRequest): Promise<Collections>;
    /**
     * Advanced search returns NFTs satisfying provided filter
     * Search NFTs
     */
    searchItemsRaw(requestParameters: SearchItemsRequest): Promise<SearchItemsResponse>;
    /**
     * Advanced search returns NFTs satisfying provided filter
     * Search NFTs
     */
    searchItems(requestParameters: SearchItemsRequest): Promise<Items>;
    /**
     * Advanced search returns NFT Ownerships satisfying provided filter
     * Search NFT Ownerships
     */
    searchOwnershipsRaw(requestParameters: SearchOwnershipsRequest): Promise<SearchOwnershipsResponse>;
    /**
     * Advanced search returns NFT Ownerships satisfying provided filter
     * Search NFT Ownerships
     */
    searchOwnerships(requestParameters: SearchOwnershipsRequest): Promise<Ownerships>;
    /**
     * Returns aggregation of existing traits for specified collections with counter for each trait type/value.\\  This is full-text-search, where you can specify filter for trait keys not precisely\\  (for example, results `back` filter include `Background` trait)
     * Search NFT collection traits
     */
    searchTraitsRaw(requestParameters: SearchTraitsRequest): Promise<SearchTraitsResponse>;
    /**
     * Returns aggregation of existing traits for specified collections with counter for each trait type/value.\\  This is full-text-search, where you can specify filter for trait keys not precisely\\  (for example, results `back` filter include `Background` trait)
     * Search NFT collection traits
     */
    searchTraits(requestParameters: SearchTraitsRequest): Promise<Traits>;
}
export type SearchActivities200 = {
    status: 200;
    value: Activities;
};
export type SearchActivities400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type SearchActivities500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type SearchActivitiesResponse = SearchActivities200 | SearchActivities400 | SearchActivities500;
export type SearchCollection200 = {
    status: 200;
    value: Collections;
};
export type SearchCollection400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type SearchCollection500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type SearchCollectionResponse = SearchCollection200 | SearchCollection400 | SearchCollection500;
export type SearchItems200 = {
    status: 200;
    value: Items;
};
export type SearchItems400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type SearchItems500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type SearchItemsResponse = SearchItems200 | SearchItems400 | SearchItems500;
export type SearchOwnerships200 = {
    status: 200;
    value: Ownerships;
};
export type SearchOwnerships400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type SearchOwnerships500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type SearchOwnershipsResponse = SearchOwnerships200 | SearchOwnerships400 | SearchOwnerships500;
export type SearchTraits200 = {
    status: 200;
    value: Traits;
};
export type SearchTraits400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export type SearchTraits500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export type SearchTraitsResponse = SearchTraits200 | SearchTraits400 | SearchTraits500;
