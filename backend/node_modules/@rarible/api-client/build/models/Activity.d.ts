import { ActivityBlockchainInfo } from "./ActivityBlockchainInfo";
import { ActivityId } from "@rarible/types";
import { Asset } from "./Asset";
import { AssetType } from "./AssetType";
import { BigNumberLike } from "@rarible/types";
import { CollectionId } from "@rarible/types";
import { ItemId } from "@rarible/types";
import { OrderActivityMatchSide } from "./OrderActivityMatchSide";
import { OrderActivitySource } from "./OrderActivitySource";
import { OrderId } from "@rarible/types";
import { UnionAddress } from "@rarible/types";
import { UnionContractAddress } from "@rarible/types";
export type Activity = MintActivity | BurnActivity | TransferActivity | SendToChainActivity | ReceiveFromChainActivity | OrderMatchActivity | OrderBidActivity | OrderListActivity | OrderCancelBidActivity | OrderCancelListActivity | L2DepositActivity | L2WithdrawalActivity;
export type MintActivity = {
    "@type": "MINT";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    owner: UnionAddress;
    contract?: UnionContractAddress;
    collection?: CollectionId;
    tokenId?: BigNumberLike;
    itemId?: ItemId;
    value: BigNumberLike;
    mintPrice?: BigNumberLike;
    mintPayment?: Asset;
    mintPriceUsd?: BigNumberLike;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export type BurnActivity = {
    "@type": "BURN";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    owner: UnionAddress;
    contract?: UnionContractAddress;
    collection?: CollectionId;
    tokenId?: BigNumberLike;
    itemId?: ItemId;
    value: BigNumberLike;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export type TransferActivity = {
    "@type": "TRANSFER";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    from: UnionAddress;
    owner: UnionAddress;
    contract?: UnionContractAddress;
    collection?: CollectionId;
    tokenId?: BigNumberLike;
    itemId?: ItemId;
    value: BigNumberLike;
    purchase?: boolean;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export type SendToChainActivity = {
    "@type": "SEND_TO_CHAIN";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    owner: UnionAddress;
    to: string;
    chainId: BigNumberLike;
    contract?: UnionContractAddress;
    collection?: CollectionId;
    itemId: ItemId;
    value: BigNumberLike;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export type ReceiveFromChainActivity = {
    "@type": "RECEIVE_FROM_CHAIN";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    owner: UnionAddress;
    from: string;
    chainId: BigNumberLike;
    contract?: UnionContractAddress;
    collection?: CollectionId;
    itemId: ItemId;
    value: BigNumberLike;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export type OrderMatchActivity = OrderMatchSwap | OrderMatchSell;
export type OrderMatchSwap = {
    "@type": "SWAP";
    orderId?: OrderId;
    source: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    left: OrderActivityMatchSide;
    right: OrderActivityMatchSide;
};
export declare enum OrderMatchSellType {
    SELL = "SELL",
    ACCEPT_BID = "ACCEPT_BID"
}
export type OrderMatchSell = {
    "@type": "SELL";
    orderId?: OrderId;
    source: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    nft: Asset;
    payment: Asset;
    buyer: UnionAddress;
    seller: UnionAddress;
    buyerOrderHash?: string;
    sellerOrderHash?: string;
    price: BigNumberLike;
    priceUsd?: BigNumberLike;
    amountUsd?: BigNumberLike;
    type: OrderMatchSellType;
    sellMarketplaceMarker?: string;
    buyMarketplaceMarker?: string;
};
export type OrderBidActivity = {
    "@type": "BID";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    orderId?: OrderId;
    hash: string;
    maker: UnionAddress;
    make: Asset;
    take: Asset;
    price: BigNumberLike;
    priceUsd?: BigNumberLike;
    source?: OrderActivitySource;
    marketplaceMarker?: string;
};
export type OrderListActivity = {
    "@type": "LIST";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    orderId?: OrderId;
    hash: string;
    maker: UnionAddress;
    make: Asset;
    take: Asset;
    price: BigNumberLike;
    priceUsd?: BigNumberLike;
    source?: OrderActivitySource;
};
export type OrderCancelBidActivity = {
    "@type": "CANCEL_BID";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    orderId?: OrderId;
    hash: string;
    maker: UnionAddress;
    make: AssetType;
    take: AssetType;
    source?: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export type OrderCancelListActivity = {
    "@type": "CANCEL_LIST";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    orderId?: OrderId;
    hash: string;
    maker: UnionAddress;
    make: AssetType;
    take: AssetType;
    source?: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export type L2DepositActivity = {
    "@type": "L2_DEPOSIT";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    user: UnionAddress;
    status: string;
    itemId: ItemId;
    collection?: CollectionId;
    value?: BigNumberLike;
};
export type L2WithdrawalActivity = {
    "@type": "L2_WITHDRAWAL";
    id: ActivityId;
    date: string;
    lastUpdatedAt?: string;
    cursor?: string;
    reverted?: boolean;
    version?: number;
    user: UnionAddress;
    status: string;
    itemId: ItemId;
    collection?: CollectionId;
    value?: BigNumberLike;
};
