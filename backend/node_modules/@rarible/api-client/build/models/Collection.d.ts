import { Blockchain } from "./Blockchain";
import { CollectionId } from "@rarible/types";
import { CollectionMeta } from "./CollectionMeta";
import { Order } from "./Order";
import { OriginOrders } from "./OriginOrders";
import { UnionAddress } from "@rarible/types";
export type Collection = {
    id: CollectionId;
    parent?: CollectionId;
    blockchain: Blockchain;
    structure?: CollectionStructure;
    type: CollectionType;
    status?: CollectionStatus;
    name: string;
    symbol?: string;
    owner?: UnionAddress;
    features: Array<CollectionFeatures>;
    minters?: Array<UnionAddress>;
    meta?: CollectionMeta;
    bestBidOrder?: Order;
    bestSellOrder?: Order;
    bestBidOrdersByCurrency?: Array<Order>;
    originOrders?: Array<OriginOrders>;
    self?: boolean;
    scam?: boolean;
    spamScore?: number;
    hasTraits?: boolean;
    shared?: boolean;
    extra?: Record<string, string>;
    version?: number;
};
export declare enum CollectionStructure {
    REGULAR = "REGULAR",
    COMPOSITE = "COMPOSITE",
    PART = "PART"
}
export declare enum CollectionType {
    CRYPTO_PUNKS = "CRYPTO_PUNKS",
    ERC721 = "ERC721",
    ERC1155 = "ERC1155",
    FLOW = "FLOW",
    TEZOS_NFT = "TEZOS_NFT",
    TEZOS_MT = "TEZOS_MT",
    SOLANA = "SOLANA",
    TOKEN_GROUP_2022 = "TOKEN_GROUP_2022",
    IMMUTABLEX = "IMMUTABLEX",
    APTOS = "APTOS",
    HEDERA = "HEDERA"
}
export declare enum CollectionStatus {
    PENDING = "PENDING",
    ERROR = "ERROR",
    CONFIRMED = "CONFIRMED"
}
export declare enum CollectionFeatures {
    APPROVE_FOR_ALL = "APPROVE_FOR_ALL",
    SET_URI_PREFIX = "SET_URI_PREFIX",
    BURN = "BURN",
    MINT_WITH_ADDRESS = "MINT_WITH_ADDRESS",
    SECONDARY_SALE_FEES = "SECONDARY_SALE_FEES",
    MINT_AND_TRANSFER = "MINT_AND_TRANSFER",
    PAUSABLE = "PAUSABLE",
    NOT_FOR_SALE = "NOT_FOR_SALE"
}
