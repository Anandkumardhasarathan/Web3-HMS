import { AmmOrders } from "./AmmOrders";
import { BigNumberLike } from "@rarible/types";
import { Blockchain } from "./Blockchain";
import { CollectionId } from "@rarible/types";
import { Creator } from "./Creator";
import { ItemCollection } from "./ItemCollection";
import { ItemId } from "@rarible/types";
import { ItemLastSale } from "./ItemLastSale";
import { ItemTransfer } from "./ItemHistory";
import { Meta } from "./Meta";
import { Order } from "./Order";
import { OriginOrders } from "./OriginOrders";
import { UnionAddress } from "@rarible/types";
import { UnionContractAddress } from "@rarible/types";
export type Item = {
    id: ItemId;
    blockchain: Blockchain;
    collection?: CollectionId;
    contract?: UnionContractAddress;
    tokenId?: BigNumberLike;
    creators: Array<Creator>;
    ownerIfSingle?: UnionAddress;
    lazySupply: BigNumberLike;
    pending: Array<ItemTransfer>;
    mintedAt: string;
    lastUpdatedAt: string;
    supply: BigNumberLike;
    meta?: Meta;
    deleted: boolean;
    bestSellOrder?: Order;
    bestBidOrder?: Order;
    bestBidOrdersByCurrency?: Array<Order>;
    originOrders?: Array<OriginOrders>;
    ammOrders?: AmmOrders;
    auctions?: Array<string>;
    totalStock?: BigNumberLike;
    sellers: number;
    lastSale?: ItemLastSale;
    self?: boolean;
    suspicious?: boolean;
    itemCollection?: ItemCollection;
    features?: Array<ItemFeatures>;
    extra?: Record<string, string>;
    version?: number;
};
export declare enum ItemFeatures {
    NOT_FOR_SALE = "NOT_FOR_SALE"
}
