import type { AnyRawTransaction, CommittedTransactionResponse, Ed25519Account } from "@aptos-labs/ts-sdk";
import { Aptos } from "@aptos-labs/ts-sdk";
import { AptosGenericSdkWallet } from "@rarible/aptos-wallet";
import type { AddressConfig } from "../../config";
export declare function createTestAptosState(privateKey?: string): TestAptosState;
export declare function generateTestAptosState(): TestAptosState;
export type TestAptosState = {
    aptos: Aptos;
    account: Ed25519Account;
    wallet: AptosGenericSdkWallet;
    config: AddressConfig;
    transferAPT: (recepient: string, amount: string) => Promise<CommittedTransactionResponse>;
};
export declare const DEFAULT_PK = "0x229eea52e53be5a6fd1ba00e660fc632cdb47ffe8f777a847daa8220553c5511";
export declare const BUYER_PK = "0x15b7dde0584838dd033894bfaa9f64013206ff3f82d9d325e1479cab4709e43c";
export declare function mintTestToken(state: TestAptosState, options?: {
    collectionName: string;
} | {
    collectionAddress: string;
}): Promise<{
    tokenAddress: string;
    tokenName: any;
}>;
export declare function createTestCollection(state: TestAptosState): Promise<{
    rariDropAddress: string;
    aptosCollectionAddress: string;
    collectionName: string;
}>;
export declare function createTestCollectionAndMint(state: TestAptosState): Promise<{
    rariDropAddress: string;
    aptosCollectionAddress: string;
    collectionAddress: string;
    collectionName: string;
    tokenAddress: string;
    tokenName: any;
}>;
export declare function createV1TokenWithFeePayer(feePayerState: TestAptosState, state: TestAptosState): Promise<CommittedTransactionResponse>;
export declare function sendTxWithPayer(feePayerState: TestAptosState, state: TestAptosState, transaction: AnyRawTransaction): Promise<CommittedTransactionResponse>;
export declare function createV1Token(state: TestAptosState): Promise<{
    tx: import("@aptos-labs/ts-sdk").UserTransactionResponse | import("@aptos-labs/ts-sdk").GenesisTransactionResponse | import("@aptos-labs/ts-sdk").BlockMetadataTransactionResponse | import("@aptos-labs/ts-sdk").ValidatorTransactionResponse;
    propertyVersion: number;
    collectionName: string;
    tokenName: string;
    creator: string;
}>;
/**
 *
 * @param state Sender state
 * @param to Receipent
 * @param amount Integer
 */
export declare function transferAptosCoins(state: {
    aptos: Aptos;
    wallet: AptosGenericSdkWallet;
}, to: string, amount: string): Promise<CommittedTransactionResponse>;
