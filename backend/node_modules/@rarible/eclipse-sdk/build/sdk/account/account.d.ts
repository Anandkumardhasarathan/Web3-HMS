import type { Connection, PublicKey } from "@solana/web3.js";
import type { SolanaSigner } from "@rarible/solana-common";
import type { Account } from "@solana/spl-token/src/state/account";
import { PreparedTransaction } from "../prepared-transaction";
import type { DebugLogger } from "../../logger/debug-logger";
export interface ITokenAccountRequest {
    mint: PublicKey;
    owner: PublicKey;
}
export interface IAccountInfoRequest {
    tokenAccount: PublicKey;
}
export interface IRevokeRequest {
    signer: SolanaSigner;
    tokenAccount: PublicKey;
}
export interface IEclipseAccountSdk {
    getTokenAccountForMint(request: ITokenAccountRequest): Promise<PublicKey | undefined>;
    getAccountInfo(request: IAccountInfoRequest): Promise<Account>;
    revokeDelegate(request: IRevokeRequest): PreparedTransaction;
}
export declare class EclipseAccountSdk implements IEclipseAccountSdk {
    private readonly connection;
    private readonly logger;
    constructor(connection: Connection, logger: DebugLogger);
    getAccountInfo(request: IAccountInfoRequest): Promise<import("@solana/spl-token").Account>;
    revokeDelegate(request: IRevokeRequest): PreparedTransaction;
    getTokenAccountForMint(request: ITokenAccountRequest): Promise<PublicKey | undefined>;
}
