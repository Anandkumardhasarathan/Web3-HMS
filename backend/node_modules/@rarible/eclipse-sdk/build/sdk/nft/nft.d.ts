import type { Connection, PublicKey } from "@solana/web3.js";
import type { BigNumberValue } from "@rarible/utils";
import type { SolanaSigner } from "@rarible/solana-common";
import type { DebugLogger } from "../../logger/debug-logger";
import type { IEclipseAccountSdk } from "../account/account";
import { PreparedTransaction } from "../prepared-transaction";
export interface ITransferRequest {
    signer: SolanaSigner;
    tokenAccount?: PublicKey;
    owner: PublicKey;
    to: PublicKey;
    mint: PublicKey;
    amount: BigNumberValue;
}
export interface IBurnRequest {
    signer: SolanaSigner;
    mint: PublicKey;
    amount: BigNumberValue;
    tokenAccount?: PublicKey;
    owner: PublicKey;
}
export interface IEclipseNftSdk {
    transfer(request: ITransferRequest): Promise<PreparedTransaction>;
    burn(request: IBurnRequest): Promise<PreparedTransaction>;
}
export declare class EclipseNftSdk implements IEclipseNftSdk {
    private readonly connection;
    private readonly logger;
    private readonly accountSdk;
    constructor(connection: Connection, logger: DebugLogger, accountSdk: IEclipseAccountSdk);
    transfer(request: ITransferRequest): Promise<PreparedTransaction>;
    burn(request: IBurnRequest): Promise<PreparedTransaction>;
}
