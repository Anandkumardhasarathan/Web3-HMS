import type { Connection, Commitment } from "@solana/web3.js";
import type { SolanaSigner } from "@rarible/solana-common";
import type { ITransactionPreparedInstructions } from "../common/transactions";
import type { TransactionResult } from "../types";
import type { DebugLogger } from "../logger/debug-logger";
export declare class PreparedTransaction {
    private readonly connection;
    readonly data: ITransactionPreparedInstructions;
    readonly signer: SolanaSigner;
    private readonly logger?;
    readonly onSubmit?: ((tx: TransactionResult) => void) | undefined;
    constructor(connection: Connection, data: ITransactionPreparedInstructions, signer: SolanaSigner, logger?: DebugLogger | undefined, onSubmit?: ((tx: TransactionResult) => void) | undefined);
    submit: (commitment: Commitment) => Promise<TransactionResult>;
}
