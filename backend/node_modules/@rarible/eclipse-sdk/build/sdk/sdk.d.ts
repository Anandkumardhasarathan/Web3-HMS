import type { Cluster, Commitment, ConnectionConfig } from "@solana/web3.js";
import { Connection } from "@solana/web3.js";
import { DebugLogger } from "../logger/debug-logger";
import type { IEclipseBalancesSdk } from "./balance/balance";
import type { IEclipseNftSdk } from "./nft/nft";
import type { IEclipseAccountSdk } from "./account/account";
import type { IEclipseOrderSdk } from "./order/order";
export interface IEclipseSdkConfig {
    connection: {
        cluster: Cluster;
        endpoint?: string;
        commitmentOrConfig?: Commitment | ConnectionConfig;
    };
    debug?: boolean;
}
export declare class EclipseSdk {
    readonly connection: Connection;
    readonly cluster: Cluster;
    readonly debug: boolean;
    readonly debugLogger: DebugLogger;
    readonly balances: IEclipseBalancesSdk;
    readonly nft: IEclipseNftSdk;
    readonly order: IEclipseOrderSdk;
    readonly account: IEclipseAccountSdk;
    constructor(connection: Connection, cluster: Cluster, debug?: boolean);
    static create(config: IEclipseSdkConfig): EclipseSdk;
    confirmTransaction(...args: Parameters<typeof Connection.prototype.confirmTransaction>): Promise<import("@solana/web3.js").RpcResponseAndContext<import("@solana/web3.js").SignatureResult>>;
}
