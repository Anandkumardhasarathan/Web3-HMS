import type { Connection } from "@solana/web3.js";
import { type AccountMeta, PublicKey } from "@solana/web3.js";
import type { BigNumber } from "@rarible/utils";
export declare const getTokenProgramFromMint: (connection: Connection, mint: string) => Promise<PublicKey | undefined>;
export declare const getNftProgramFromMint: (connection: Connection, nftMint: string) => Promise<PublicKey | undefined>;
export declare const isMetaplexMetadataAccount: (connection: Connection, mint: string) => Promise<boolean>;
export declare const isWnsNft: (connection: Connection, mint: string) => Promise<boolean>;
export type WnsAccountParams = {
    groupMint: string;
    paymentMint: string;
};
export declare const getRemainingAccountsForMint: (connection: Connection, mint: string, wnsParams: WnsAccountParams | undefined) => Promise<AccountMeta[]>;
export declare const getProgramAddress: (seeds: Uint8Array[], programId: PublicKey) => PublicKey;
export declare const getAtaAddress: (mint: string, owner: string, tokenProgram: string) => PublicKey;
export declare const getMarketPda: (marketIdentifier: string) => PublicKey;
export declare const getVerificationPda: (marketAddress: string, nftMint: string) => PublicKey;
export declare const getOrderAccount: (nonce: string, marketAddress: string, user: string) => PublicKey;
export declare const getEventAuthority: () => PublicKey;
export declare const getExtraMetasAccountPda: (mint: string) => PublicKey;
export declare const getApproveAccountPda: (mint: string) => PublicKey;
export declare const getDistributionAccountPda: (groupMint: string, paymentMint: string) => PublicKey;
export declare const getGroupMemberAccount: (nftMint: string) => PublicKey;
export declare function toLamports(value: BigNumber): number;
