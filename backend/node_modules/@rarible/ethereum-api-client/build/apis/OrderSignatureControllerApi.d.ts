/**
 * OpenAPI definition
 * # Exciting News  Hey there, amazing developers! üëã  We\'ve got some fantastic news to share that will make your experience with our product even better. We\'re thrilled to announce the implementation of API-Keys, which brings a new level of control and convenience to your development process. So, let\'s dive right into the details! ‚ú®  ## API-Keys for Enhanced Functionality üîë  Starting now, we have introduced API-Keys to streamline your interactions with our methods. You might have noticed a slight change while making requests ‚Äì now, all you need to do is include the parameter `X-API-KEY` in the Header of your request. Simple as that!  ## Get Your API-Key in a Snap! ‚ö°Ô∏è  Securing your API-Key is a breeze. We\'ve made the process super user-friendly to ensure you can get started quickly. Just head over to our website and fill out a simple form. Once you\'ve done that, your shiny new API-Key will be delivered straight to your email inbox. Easy peasy! üìß  [Get Your API-Key Here](https://api.rarible.org/registration) [Configure SDK with API-key](https://github.com/rarible/sdk#api-querying)  ## Unlock the Power of the Rarible Protocol üîì  As passionate developers, we know you\'re always hungry for knowledge and eager to explore new frontiers. That\'s why we invite you to discover the incredible world of the Rarible Protocol. By visiting our dedicated protocol page, you\'ll gain access to a treasure trove of useful information, tips, and insights that will elevate your development skills to new heights. üöÄ  [Explore the Rarible Protocol](https://rarible.org)  So, buckle up and get ready for an enhanced development journey with our API-Keys. We\'re excited to see what you\'ll create using our revamped system! üí™üöÄ  Stay curious, keep innovating, and happy coding! ‚ú®  [P.S. Join our Discord Server to stay up to date and ask questions](https://discord.gg/rarifoundation)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { EthereumApiErrorBadRequest, EthereumApiErrorServerError, EthereumSignatureValidationForm, SeaportFulfillmentSimpleResponse, X2Y2GetCancelInputRequest, X2Y2OrderSignRequest, X2Y2SignResponse } from '../models';
export interface CancelSignX2Y2Request {
    x2Y2GetCancelInputRequest: X2Y2GetCancelInputRequest;
}
export interface GetSeaportOrderSignatureRequest {
    hash: string;
}
export interface OrderSignX2Y2Request {
    x2Y2OrderSignRequest: X2Y2OrderSignRequest;
}
export interface ValidateRequest {
    ethereumSignatureValidationForm: EthereumSignatureValidationForm;
}
/**
 * no description
 */
export declare class OrderSignatureControllerApi extends runtime.BaseAPI {
    /**
     * Fetch x2y2 cancel sign
     */
    cancelSignX2Y2Raw(requestParameters: CancelSignX2Y2Request): Promise<CancelSignX2Y2Response>;
    /**
     * Fetch x2y2 cancel sign
     */
    cancelSignX2Y2(requestParameters: CancelSignX2Y2Request): Promise<X2Y2SignResponse>;
    /**
     * Fetch Seaport order signature
     */
    getSeaportOrderSignatureRaw(requestParameters: GetSeaportOrderSignatureRequest): Promise<GetSeaportOrderSignatureResponse>;
    /**
     * Fetch Seaport order signature
     */
    getSeaportOrderSignature(requestParameters: GetSeaportOrderSignatureRequest): Promise<SeaportFulfillmentSimpleResponse>;
    /**
     * Fetch x2y2 order sign
     */
    orderSignX2Y2Raw(requestParameters: OrderSignX2Y2Request): Promise<OrderSignX2Y2Response>;
    /**
     * Fetch x2y2 order sign
     */
    orderSignX2Y2(requestParameters: OrderSignX2Y2Request): Promise<X2Y2SignResponse>;
    /**
     * Validation of the order signature
     */
    validateRaw(requestParameters: ValidateRequest): Promise<ValidateResponse>;
    /**
     * Validation of the order signature
     */
    validate(requestParameters: ValidateRequest): Promise<boolean>;
}
export type CancelSignX2Y2200 = {
    status: 200;
    value: X2Y2SignResponse;
};
export type CancelSignX2Y2400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export type CancelSignX2Y2500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export type CancelSignX2Y2Response = CancelSignX2Y2200 | CancelSignX2Y2400 | CancelSignX2Y2500;
export type GetSeaportOrderSignature200 = {
    status: 200;
    value: SeaportFulfillmentSimpleResponse;
};
export type GetSeaportOrderSignature400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export type GetSeaportOrderSignature500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export type GetSeaportOrderSignatureResponse = GetSeaportOrderSignature200 | GetSeaportOrderSignature400 | GetSeaportOrderSignature500;
export type OrderSignX2Y2200 = {
    status: 200;
    value: X2Y2SignResponse;
};
export type OrderSignX2Y2400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export type OrderSignX2Y2500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export type OrderSignX2Y2Response = OrderSignX2Y2200 | OrderSignX2Y2400 | OrderSignX2Y2500;
export type Validate200 = {
    status: 200;
    value: boolean;
};
export type Validate400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export type Validate500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export type ValidateResponse = Validate200 | Validate400 | Validate500;
