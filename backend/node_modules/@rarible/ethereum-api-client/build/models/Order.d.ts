import { Asset } from "./Asset";
import { BigNumberLike } from "@rarible/types";
import { Binary } from "@rarible/types";
import { EVMAddress } from "@rarible/types";
import { OrderAmmDataV1 } from "./OrderData";
import { OrderCryptoPunksData } from "./OrderData";
import { OrderDataLegacy } from "./OrderData";
import { OrderExchangeHistory } from "./OrderExchangeHistory";
import { OrderLooksRareDataV1 } from "./OrderData";
import { OrderLooksRareDataV2 } from "./OrderData";
import { OrderOpenSeaV1DataV1 } from "./OrderData";
import { OrderPriceHistoryRecord } from "./OrderPriceHistoryRecord";
import { OrderRaribleV2Data } from "./OrderData";
import { OrderSeaportDataV1 } from "./OrderData";
import { OrderStatus } from "./OrderStatus";
import { OrderX2Y2Data } from "./OrderData";
import { Word } from "@rarible/types";
export type Order = LegacyOrder | RaribleV2Order | OpenSeaV1Order | SeaportV1Order | CryptoPunkOrder | X2Y2Order | LooksRareOrder | LooksRareV2Order | AmmOrder;
export type LegacyOrder = {
    type: "RARIBLE_V1";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderDataLegacy;
};
export type RaribleV2Order = {
    type: "RARIBLE_V2";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderRaribleV2Data;
};
export type OpenSeaV1Order = {
    type: "OPEN_SEA_V1";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderOpenSeaV1DataV1;
};
export type SeaportV1Order = {
    type: "SEAPORT_V1";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderSeaportDataV1;
};
export type CryptoPunkOrder = {
    type: "CRYPTO_PUNK";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderCryptoPunksData;
};
export type X2Y2Order = {
    type: "X2Y2";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderX2Y2Data;
};
export type LooksRareOrder = {
    type: "LOOKSRARE";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderLooksRareDataV1;
};
export type LooksRareV2Order = {
    type: "LOOKSRARE_V2";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderLooksRareDataV2;
};
export type AmmOrder = {
    type: "AMM";
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    fill: BigNumberLike;
    fillValue?: BigNumberLike;
    start?: number;
    end?: number;
    makeStock: BigNumberLike;
    makeStockValue?: BigNumberLike;
    cancelled: boolean;
    optionalRoyalties?: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    dbUpdatedAt?: string;
    pending?: Array<OrderExchangeHistory>;
    id?: string;
    hash: Word;
    makeBalance?: BigNumberLike;
    makePrice?: BigNumberLike;
    takePrice?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    priceHistory?: Array<OrderPriceHistoryRecord>;
    status?: OrderStatus;
    data: OrderAmmDataV1;
};
