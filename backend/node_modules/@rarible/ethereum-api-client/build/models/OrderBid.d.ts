import { Asset } from "./Asset";
import { BigNumberLike } from "@rarible/types";
import { Binary } from "@rarible/types";
import { EVMAddress } from "@rarible/types";
import { OrderAmmDataV1 } from "./OrderData";
import { OrderBidStatus } from "./OrderBidStatus";
import { OrderDataLegacy } from "./OrderData";
import { OrderLooksRareDataV1 } from "./OrderData";
import { OrderLooksRareDataV2 } from "./OrderData";
import { OrderOpenSeaV1DataV1 } from "./OrderData";
import { OrderRaribleV2Data } from "./OrderData";
import { OrderSeaportDataV1 } from "./OrderData";
import { OrderX2Y2Data } from "./OrderData";
import { Word } from "@rarible/types";
export type OrderBid = LegacyOrderBid | RaribleV2OrderBid | OpenSeaV1OrderBid | SeaportV1OrderBid | CryptoPunksOrderBid | LooksRareOrderBid | LooksRareV2OrderBid | X2Y2OrderBid | AmmOrderBid;
export type LegacyOrderBid = {
    type: "RARIBLE_V1";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderDataLegacy;
};
export type RaribleV2OrderBid = {
    type: "RARIBLE_V2";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderRaribleV2Data;
};
export type OpenSeaV1OrderBid = {
    type: "OPEN_SEA_V1";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderOpenSeaV1DataV1;
};
export type SeaportV1OrderBid = {
    type: "SEAPORT_V1";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderSeaportDataV1;
};
export type CryptoPunksOrderBid = {
    type: "CRYPTO_PUNKS";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
};
export type LooksRareOrderBid = {
    type: "LOOKSRARE";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderLooksRareDataV1;
};
export type LooksRareV2OrderBid = {
    type: "LOOKSRARE_V2";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderLooksRareDataV2;
};
export type X2Y2OrderBid = {
    type: "X2Y2";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderX2Y2Data;
};
export type AmmOrderBid = {
    type: "AMM";
    orderHash: Word;
    status: OrderBidStatus;
    maker: EVMAddress;
    taker?: EVMAddress;
    make: Asset;
    take: Asset;
    makeBalance?: BigNumberLike;
    makePriceUsd?: BigNumberLike;
    takePriceUsd?: BigNumberLike;
    fill: BigNumberLike;
    makeStock: BigNumberLike;
    cancelled: boolean;
    salt: Binary;
    signature?: Binary;
    createdAt: string;
    data: OrderAmmDataV1;
};
