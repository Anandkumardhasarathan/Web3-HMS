import type { MessageTypes, TypedMessage } from "./domain";
export type SendFunction = (method: string, params: any) => Promise<any>;
export declare function signTypedData<T extends MessageTypes>(send: SendFunction, signer: string, data: TypedMessage<T>): Promise<string>;
export declare function filterErrors(original: unknown): void;
export declare function isObject(x: unknown): x is Object;
export declare function hasMessage(error: unknown): error is {
    message: string;
};
export declare class SignTypedDataError extends Error {
    data: any;
    error: any;
    code?: string | number;
    constructor(data: {
        error: any;
        data: any;
        message?: string;
    });
    static getErrorMessage(data: any): any;
}
