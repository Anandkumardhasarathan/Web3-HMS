/**
 * flow-protocol-model-common
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { FlowActivities, FlowApiError, NftActivitiesByIdRequest } from '../models';
export interface GetNftOrderActivitiesByCollectionRequest {
    type: Array<GetNftOrderActivitiesByCollectionTypeEnum>;
    collection: string;
    continuation?: string;
    size?: number;
    sort?: GetNftOrderActivitiesByCollectionSortEnum;
}
export interface GetNftOrderActivitiesByCollectionsRequest {
    type: Array<GetNftOrderActivitiesByCollectionsTypeEnum>;
    collection: Array<string>;
    continuation?: string;
    size?: number;
    sort?: GetNftOrderActivitiesByCollectionsSortEnum;
}
export interface GetNftOrderActivitiesByIdRequest {
    nftActivitiesByIdRequest: NftActivitiesByIdRequest;
}
export interface GetNftOrderActivitiesByItemRequest {
    type: Array<GetNftOrderActivitiesByItemTypeEnum>;
    contract: string;
    tokenId: number;
    continuation?: string;
    size?: number;
    sort?: GetNftOrderActivitiesByItemSortEnum;
}
export interface GetNftOrderActivitiesByItemAndOwnerRequest {
    type: Array<GetNftOrderActivitiesByItemAndOwnerTypeEnum>;
    contract: string;
    tokenId: number;
    owner: string;
    continuation?: string;
    size?: number;
    sort?: GetNftOrderActivitiesByItemAndOwnerSortEnum;
}
export interface GetNftOrderActivitiesByUserRequest {
    type: Array<GetNftOrderActivitiesByUserTypeEnum>;
    user: Array<string>;
    from?: number;
    to?: number;
    continuation?: string;
    size?: number;
    sort?: GetNftOrderActivitiesByUserSortEnum;
}
export interface GetNftOrderActivitiesSyncRequest {
    type: Array<GetNftOrderActivitiesSyncTypeEnum>;
    continuation?: string;
    size?: number;
    sort?: GetNftOrderActivitiesSyncSortEnum;
}
export interface GetNftOrderAllActivitiesRequest {
    type: Array<GetNftOrderAllActivitiesTypeEnum>;
    continuation?: string;
    size?: number;
    sort?: GetNftOrderAllActivitiesSortEnum;
}
/**
 * no description
 */
export declare class FlowNftOrderActivityControllerApi extends runtime.BaseAPI {
    /**
     */
    getNftOrderActivitiesByCollectionRaw(requestParameters: GetNftOrderActivitiesByCollectionRequest): Promise<GetNftOrderActivitiesByCollectionResponse>;
    /**
     */
    getNftOrderActivitiesByCollection(requestParameters: GetNftOrderActivitiesByCollectionRequest): Promise<FlowActivities>;
    /**
     */
    getNftOrderActivitiesByCollectionsRaw(requestParameters: GetNftOrderActivitiesByCollectionsRequest): Promise<GetNftOrderActivitiesByCollectionsResponse>;
    /**
     */
    getNftOrderActivitiesByCollections(requestParameters: GetNftOrderActivitiesByCollectionsRequest): Promise<FlowActivities>;
    /**
     */
    getNftOrderActivitiesByIdRaw(requestParameters: GetNftOrderActivitiesByIdRequest): Promise<GetNftOrderActivitiesByIdResponse>;
    /**
     */
    getNftOrderActivitiesById(requestParameters: GetNftOrderActivitiesByIdRequest): Promise<FlowActivities>;
    /**
     */
    getNftOrderActivitiesByItemRaw(requestParameters: GetNftOrderActivitiesByItemRequest): Promise<GetNftOrderActivitiesByItemResponse>;
    /**
     */
    getNftOrderActivitiesByItem(requestParameters: GetNftOrderActivitiesByItemRequest): Promise<FlowActivities>;
    /**
     */
    getNftOrderActivitiesByItemAndOwnerRaw(requestParameters: GetNftOrderActivitiesByItemAndOwnerRequest): Promise<GetNftOrderActivitiesByItemAndOwnerResponse>;
    /**
     */
    getNftOrderActivitiesByItemAndOwner(requestParameters: GetNftOrderActivitiesByItemAndOwnerRequest): Promise<FlowActivities>;
    /**
     */
    getNftOrderActivitiesByUserRaw(requestParameters: GetNftOrderActivitiesByUserRequest): Promise<GetNftOrderActivitiesByUserResponse>;
    /**
     */
    getNftOrderActivitiesByUser(requestParameters: GetNftOrderActivitiesByUserRequest): Promise<FlowActivities>;
    /**
     */
    getNftOrderActivitiesSyncRaw(requestParameters: GetNftOrderActivitiesSyncRequest): Promise<GetNftOrderActivitiesSyncResponse>;
    /**
     */
    getNftOrderActivitiesSync(requestParameters: GetNftOrderActivitiesSyncRequest): Promise<FlowActivities>;
    /**
     */
    getNftOrderAllActivitiesRaw(requestParameters: GetNftOrderAllActivitiesRequest): Promise<GetNftOrderAllActivitiesResponse>;
    /**
     */
    getNftOrderAllActivities(requestParameters: GetNftOrderAllActivitiesRequest): Promise<FlowActivities>;
}
export declare type GetNftOrderActivitiesByCollection200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesByCollection400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByCollection500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByCollectionResponse = GetNftOrderActivitiesByCollection200 | GetNftOrderActivitiesByCollection400 | GetNftOrderActivitiesByCollection500;
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByCollectionTypeEnum {
    TRANSFER = "TRANSFER",
    MINT = "MINT",
    BURN = "BURN",
    SELL = "SELL",
    LIST = "LIST",
    CANCELLIST = "CANCEL_LIST",
    BID = "BID",
    CANCELBID = "CANCEL_BID"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByCollectionSortEnum {
    LATESTFIRST = "LATEST_FIRST",
    EARLIESTFIRST = "EARLIEST_FIRST"
}
export declare type GetNftOrderActivitiesByCollections200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesByCollections400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByCollections500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByCollectionsResponse = GetNftOrderActivitiesByCollections200 | GetNftOrderActivitiesByCollections400 | GetNftOrderActivitiesByCollections500;
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByCollectionsTypeEnum {
    TRANSFER = "TRANSFER",
    MINT = "MINT",
    BURN = "BURN",
    SELL = "SELL",
    LIST = "LIST",
    CANCELLIST = "CANCEL_LIST",
    BID = "BID",
    CANCELBID = "CANCEL_BID"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByCollectionsSortEnum {
    LATESTFIRST = "LATEST_FIRST",
    EARLIESTFIRST = "EARLIEST_FIRST"
}
export declare type GetNftOrderActivitiesById200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesById400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesById500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByIdResponse = GetNftOrderActivitiesById200 | GetNftOrderActivitiesById400 | GetNftOrderActivitiesById500;
export declare type GetNftOrderActivitiesByItem200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesByItem400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByItem500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByItemResponse = GetNftOrderActivitiesByItem200 | GetNftOrderActivitiesByItem400 | GetNftOrderActivitiesByItem500;
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByItemTypeEnum {
    TRANSFER = "TRANSFER",
    MINT = "MINT",
    BURN = "BURN",
    SELL = "SELL",
    LIST = "LIST",
    CANCELLIST = "CANCEL_LIST",
    BID = "BID",
    CANCELBID = "CANCEL_BID"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByItemSortEnum {
    LATESTFIRST = "LATEST_FIRST",
    EARLIESTFIRST = "EARLIEST_FIRST"
}
export declare type GetNftOrderActivitiesByItemAndOwner200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesByItemAndOwner400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByItemAndOwner500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByItemAndOwnerResponse = GetNftOrderActivitiesByItemAndOwner200 | GetNftOrderActivitiesByItemAndOwner400 | GetNftOrderActivitiesByItemAndOwner500;
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByItemAndOwnerTypeEnum {
    TRANSFER = "TRANSFER",
    MINT = "MINT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByItemAndOwnerSortEnum {
    LATESTFIRST = "LATEST_FIRST",
    EARLIESTFIRST = "EARLIEST_FIRST"
}
export declare type GetNftOrderActivitiesByUser200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesByUser400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByUser500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetNftOrderActivitiesByUserResponse = GetNftOrderActivitiesByUser200 | GetNftOrderActivitiesByUser400 | GetNftOrderActivitiesByUser500;
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByUserTypeEnum {
    TRANSFERFROM = "TRANSFER_FROM",
    TRANSFERTO = "TRANSFER_TO",
    MINT = "MINT",
    BURN = "BURN",
    SELL = "SELL",
    BUY = "BUY",
    LIST = "LIST",
    CANCELLIST = "CANCEL_LIST",
    BID = "BID",
    CANCELBID = "CANCEL_BID",
    MAKEBID = "MAKE_BID",
    GETBID = "GET_BID"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesByUserSortEnum {
    LATESTFIRST = "LATEST_FIRST",
    EARLIESTFIRST = "EARLIEST_FIRST"
}
export declare type GetNftOrderActivitiesSync200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesSync400 = {
    status: 400;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesSync500 = {
    status: 500;
    value: FlowActivities;
};
export declare type GetNftOrderActivitiesSyncResponse = GetNftOrderActivitiesSync200 | GetNftOrderActivitiesSync400 | GetNftOrderActivitiesSync500;
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesSyncTypeEnum {
    TRANSFER = "TRANSFER",
    MINT = "MINT",
    BURN = "BURN",
    SELL = "SELL",
    LIST = "LIST",
    CANCELLIST = "CANCEL_LIST",
    BID = "BID",
    CANCELBID = "CANCEL_BID"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderActivitiesSyncSortEnum {
    LATESTFIRST = "LATEST_FIRST",
    EARLIESTFIRST = "EARLIEST_FIRST"
}
export declare type GetNftOrderAllActivities200 = {
    status: 200;
    value: FlowActivities;
};
export declare type GetNftOrderAllActivities400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetNftOrderAllActivities500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetNftOrderAllActivitiesResponse = GetNftOrderAllActivities200 | GetNftOrderAllActivities400 | GetNftOrderAllActivities500;
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderAllActivitiesTypeEnum {
    TRANSFER = "TRANSFER",
    MINT = "MINT",
    BURN = "BURN",
    SELL = "SELL",
    LIST = "LIST",
    CANCELLIST = "CANCEL_LIST",
    BID = "BID",
    CANCELBID = "CANCEL_BID"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNftOrderAllActivitiesSortEnum {
    LATESTFIRST = "LATEST_FIRST",
    EARLIESTFIRST = "EARLIEST_FIRST"
}
