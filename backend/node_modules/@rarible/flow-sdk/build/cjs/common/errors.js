"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getErrorMessage = exports.FlowRunScriptError = exports.FlowRunTransactionError = exports.FlowSealError = void 0;
var tslib_1 = require("tslib");
var FlowSealError = /** @class */ (function (_super) {
    tslib_1.__extends(FlowSealError, _super);
    function FlowSealError(data) {
        var _a;
        var _this = _super.call(this, getErrorMessage(data === null || data === void 0 ? void 0 : data.error) || "FlowSealError") || this;
        Object.setPrototypeOf(_this, FlowSealError.prototype);
        _this.name = "FlowSealError";
        _this.error = data === null || data === void 0 ? void 0 : data.error;
        _this.code = ((_a = data === null || data === void 0 ? void 0 : data.error) === null || _a === void 0 ? void 0 : _a.code) || (data === null || data === void 0 ? void 0 : data.code);
        _this.txId = data === null || data === void 0 ? void 0 : data.txId;
        return _this;
    }
    return FlowSealError;
}(Error));
exports.FlowSealError = FlowSealError;
var FlowRunTransactionError = /** @class */ (function (_super) {
    tslib_1.__extends(FlowRunTransactionError, _super);
    function FlowRunTransactionError(data) {
        var _this = _super.call(this, getErrorMessage(data === null || data === void 0 ? void 0 : data.error) || "FlowRunTransactionError") || this;
        Object.setPrototypeOf(_this, FlowRunTransactionError.prototype);
        _this.name = "FlowRunTransactionError";
        _this.error = data === null || data === void 0 ? void 0 : data.error;
        _this.params = data === null || data === void 0 ? void 0 : data.params;
        return _this;
    }
    return FlowRunTransactionError;
}(Error));
exports.FlowRunTransactionError = FlowRunTransactionError;
var FlowRunScriptError = /** @class */ (function (_super) {
    tslib_1.__extends(FlowRunScriptError, _super);
    function FlowRunScriptError(data) {
        var _this = _super.call(this, getErrorMessage(data === null || data === void 0 ? void 0 : data.error) || "FlowRunScriptError") || this;
        Object.setPrototypeOf(_this, FlowRunTransactionError.prototype);
        _this.name = "FlowRunScriptError";
        _this.error = data === null || data === void 0 ? void 0 : data.error;
        _this.params = data === null || data === void 0 ? void 0 : data.params;
        return _this;
    }
    return FlowRunScriptError;
}(Error));
exports.FlowRunScriptError = FlowRunScriptError;
function getErrorMessage(error) {
    if (typeof error === "string")
        return error;
    return error === null || error === void 0 ? void 0 : error.message;
}
exports.getErrorMessage = getErrorMessage;
