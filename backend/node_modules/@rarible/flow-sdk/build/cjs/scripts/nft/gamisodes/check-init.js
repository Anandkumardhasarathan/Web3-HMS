"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkInitGamisodesContracts = void 0;
exports.checkInitGamisodesContracts = "\nimport NFTStorefrontV2 from address\nimport NonFungibleToken from 0xNonFungibleToken\nimport MetadataViews from 0xMetadataViews\nimport FungibleToken from 0xFungibleToken\nimport FlowToken from 0xFlowToken\nimport FiatToken from 0xFiatToken\nimport Gamisodes from 0xGamisodes\n\npub fun main(address: Address): {String: Bool} {\n    let account = getAccount(address)\n\n    let accountStatus: {String: Bool} = {}\n\n    let fiatTokenPubPath = FiatToken.VaultReceiverPubPath\n    let fiatTokenCollection = account.getCapability<&FiatToken.Vault{FungibleToken.Receiver}>(fiatTokenPubPath).borrow()\n\n    let NFTStorefrontV2 = NFTStorefrontV2.StorefrontPublicPath\n    let StorefrontV2 = account.getCapability(NFTStorefrontV2).borrow<&{NFTStorefrontV2.StorefrontPublic}>()\n\n    let gamisodesCollection = account.getCapability(Gamisodes.COLLECTION_PUBLIC_PATH)\n                        .borrow<&{NonFungibleToken.Receiver}>()\n\n    if StorefrontV2 != nil {\n        accountStatus.insert(key: \"StorefrontV2\", true)\n    } else {\n        accountStatus.insert(key: \"StorefrontV2\", false)\n    }\n\n    if fiatTokenCollection != nil {\n        accountStatus.insert(key: \"FiatToken\", true)\n    } else {\n        accountStatus.insert(key: \"FiatToken\", false)\n    }\n\n    if gamisodesCollection != nil {\n        accountStatus.insert(key: \"Gamisodes\", true)\n    } else {\n        accountStatus.insert(key: \"Gamisodes\", false)\n    }\n\n    return accountStatus\n}\n\n";
