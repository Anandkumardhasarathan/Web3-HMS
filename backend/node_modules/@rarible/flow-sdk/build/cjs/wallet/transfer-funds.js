"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transferFunds = void 0;
var tslib_1 = require("tslib");
var t = tslib_1.__importStar(require("@onflow/types"));
var transaction_1 = require("../common/transaction");
var config_1 = require("../config/config");
var fix_amount_1 = require("../common/fix-amount");
var prepare_order_code_1 = require("../tx-code-store/order/prepare-order-code");
var transfer_1 = require("../scripts/wallet/transfer");
function transferFunds(fcl, network, auth, request) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var txId;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!fcl) return [3 /*break*/, 3];
                    return [4 /*yield*/, (0, transaction_1.runTransaction)(fcl, config_1.CONFIGS[network].mainAddressMap, {
                            cadence: (0, prepare_order_code_1.prepareFtCode)(transfer_1.transfer, request.currency),
                            args: fcl.args([
                                fcl.arg(request.recipient, t.Address),
                                fcl.arg((0, fix_amount_1.fixAmount)(request.amount.toString()), t.UFix64),
                            ]),
                        }, auth)];
                case 1:
                    txId = _a.sent();
                    return [4 /*yield*/, (0, transaction_1.waitForSeal)(fcl, txId)];
                case 2: return [2 /*return*/, _a.sent()];
                case 3: throw new Error("Fcl is required for transfer Flow");
            }
        });
    });
}
exports.transferFunds = transferFunds;
