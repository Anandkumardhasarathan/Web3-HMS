import type { Fcl } from "@rarible/fcl-types";
import type { Maybe } from "@rarible/types";
import type { FlowAddress } from "@rarible/types";
import type { AuthWithPrivateKey, FlowNetwork } from "../types";
export declare function checkInitCollections(fcl: Maybe<Fcl>, auth: AuthWithPrivateKey, network: FlowNetwork, from?: FlowAddress): Promise<CollectionsInitStatus>;
export declare function checkInitGamisodesCollections(fcl: Maybe<Fcl>, auth: AuthWithPrivateKey, network: FlowNetwork, from?: FlowAddress): Promise<GamisodesInitStatus>;
export type CollectionsInitStatus = {
    FUSD: boolean;
    FiatToken: boolean;
    StorefrontV2: boolean;
    HWGarageCard: boolean;
    HWGarageCardV2: boolean;
    HWGaragePack: boolean;
    HWGaragePackV2: boolean;
    BBxBarbieCard: boolean;
    BBxBarbiePack: boolean;
};
export type GamisodesInitStatus = {
    StorefrontV2: boolean;
    FiatToken: boolean;
    Gamisodes: boolean;
};
