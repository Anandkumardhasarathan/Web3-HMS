import { toBigNumberLike, toFlowAddress } from "@rarible/types";
export var NODE_TRANSPORT_CONFIG = {
    emulator: "http://localhost:8888",
    testnet: "https://rest-testnet.onflow.org",
    mainnet: "https://rest-mainnet.onflow.org",
};
export var METADATA_HOST = "https://gateway.pinata.cloud";
export var MIN_ORDER_PRICE = "0.0001";
export var flowCollectionsConfig = {
    RaribleNFT: {
        contractsNames: ["RaribleOrder", "RaribleNFT", "LicensedNFT", "RaribleFee"],
        features: ["MINT", "TRANSFER", "BURN"],
    },
    MotoGPCard: {
        contractsNames: ["MotoGPCard"],
        features: ["TRANSFER", "BURN"],
    },
    Evolution: {
        contractsNames: ["Evolution"],
        features: ["TRANSFER", "BURN"],
    },
    TopShot: {
        contractsNames: ["TopShot"],
        features: ["TRANSFER", "BURN"],
    },
    MugenNFT: {
        contractsNames: ["MugenNFT"],
        features: ["TRANSFER"],
    },
    CNN_NFT: {
        contractsNames: ["CNN_NFT"],
        features: ["TRANSFER", "BURN"],
    },
    MatrixWorldFlowFestNFT: {
        contractsNames: ["MatrixWorldFlowFestNFT"],
        features: ["TRANSFER"],
    },
    MatrixWorldVoucher: {
        contractsNames: ["MatrixWorldVoucher"],
        features: ["TRANSFER"],
    },
    DisruptArt: {
        contractsNames: ["DisruptArt"],
        features: ["TRANSFER", "BURN"],
    },
    Art: {
        contractsNames: ["Art"],
        features: ["TRANSFER"],
    },
    StarlyCard: {
        contractsNames: ["StarlyCard"],
        features: ["TRANSFER", "BURN"],
    },
    OneFootballCollectible: {
        contractsNames: ["OneFootballCollectible"],
        features: ["TRANSFER", "BURN"],
    },
    ChainmonstersRewards: {
        contractsNames: ["ChainmonstersRewards"],
        features: ["TRANSFER", "BURN"],
    },
    BarterYardPackNFT: {
        contractsNames: ["BarterYardPackNFT"],
        features: ["TRANSFER", "BURN"],
    },
    Moments: {
        contractsNames: ["Moments"],
        features: ["TRANSFER", "BURN"],
    },
    Kicks: {
        contractsNames: ["Kicks"],
        features: ["TRANSFER", "BURN"],
    },
    FanfareNFTContract: {
        contractsNames: ["FanfareNFTContract"],
        features: ["TRANSFER"],
    },
    SomePlaceCollectible: {
        contractsNames: ["SomePlaceCollectible"],
        features: ["TRANSFER", "BURN"],
    },
    IrNFT: {
        contractsNames: ["IrNFT"],
        features: ["TRANSFER", "BURN"],
    },
    IrVoucher: {
        contractsNames: ["IrVoucher"],
        features: ["TRANSFER", "BURN"],
    },
    GeniaceNFT: {
        contractsNames: ["GeniaceNFT"],
        features: ["TRANSFER"],
    },
    CryptoPiggo: {
        contractsNames: ["CryptoPiggo"],
        features: ["TRANSFER"],
    },
    HWGaragePack: {
        contractsNames: ["HWGaragePack"],
        features: ["TRANSFER", "BURN"],
    },
    HWGarageCard: {
        contractsNames: ["HWGarageCard"],
        features: ["TRANSFER", "BURN"],
    },
    HWGaragePackV2: {
        contractsNames: ["HWGaragePackV2"],
        features: ["TRANSFER", "BURN"],
    },
    HWGarageCardV2: {
        contractsNames: ["HWGarageCardV2"],
        features: ["TRANSFER", "BURN"],
    },
    HWGarageTokenV2: {
        contractsNames: ["HWGarageTokenV2"],
        features: ["TRANSFER", "BURN"],
    },
    BBxBarbiePack: {
        contractsNames: ["BBxBarbiePack"],
        features: ["TRANSFER", "BURN"],
    },
    BBxBarbieCard: {
        contractsNames: ["BBxBarbieCard"],
        features: ["TRANSFER", "BURN"],
    },
    BBxBarbieToken: {
        contractsNames: ["BBxBarbieToken"],
        features: ["TRANSFER", "BURN"],
    },
    Gamisodes: {
        contractsNames: ["Gamisodes"],
        features: ["TRANSFER", "BURN"],
    },
};
var MAINNET_RARIBLE_ADDRESS = toFlowAddress("0x01ab36aaf654a13e");
var TESTNET_RARIBLE_ADDRESS = toFlowAddress("0xebf4ae01d1284af8");
var EMULATOR_ADDRESS = toFlowAddress("0xf8d6e0586b0a20c7");
// protocol fee in base points
var PROTOCOL_FEE = toBigNumberLike("0");
// todo move contracts address to fcl.config aliases  if it's possible
export var CONFIGS = {
    emulator: {
        protocolFee: { account: EMULATOR_ADDRESS, value: PROTOCOL_FEE },
        mainAddressMap: {
            NonFungibleToken: EMULATOR_ADDRESS,
            FungibleToken: toFlowAddress("0xee82856bf20e2aa6"),
            FlowToken: toFlowAddress("0x0ae53cb6e3f42a79"),
            FUSD: EMULATOR_ADDRESS,
            FiatToken: EMULATOR_ADDRESS,
            NFTStorefront: EMULATOR_ADDRESS,
            NFTStorefrontV2: EMULATOR_ADDRESS,
            MotoGPCard: EMULATOR_ADDRESS,
            Evolution: EMULATOR_ADDRESS,
            TopShot: EMULATOR_ADDRESS,
            TopShotFee: EMULATOR_ADDRESS,
            RaribleFee: EMULATOR_ADDRESS,
            RaribleOrder: EMULATOR_ADDRESS,
            LicensedNFT: EMULATOR_ADDRESS,
            RaribleNFT: EMULATOR_ADDRESS,
            RaribleOpenBid: EMULATOR_ADDRESS,
            MugenNFT: EMULATOR_ADDRESS,
            CNN_NFT: EMULATOR_ADDRESS,
            MatrixWorldFlowFestNFT: EMULATOR_ADDRESS,
            MatrixWorldVoucher: EMULATOR_ADDRESS,
            DisruptArt: EMULATOR_ADDRESS,
            Art: EMULATOR_ADDRESS,
            StarlyCard: EMULATOR_ADDRESS,
            OneFootballCollectible: EMULATOR_ADDRESS,
            ChainmonstersRewards: EMULATOR_ADDRESS,
            MetadataViews: EMULATOR_ADDRESS,
            BarterYardPackNFT: EMULATOR_ADDRESS,
            Moments: EMULATOR_ADDRESS,
            FanfareNFTContract: EMULATOR_ADDRESS,
            Kicks: EMULATOR_ADDRESS,
            SomePlaceCollectible: EMULATOR_ADDRESS,
            IrNFT: EMULATOR_ADDRESS,
            IrVoucher: EMULATOR_ADDRESS,
            GeniaceNFT: EMULATOR_ADDRESS,
            CryptoPiggo: EMULATOR_ADDRESS,
            HWGaragePack: EMULATOR_ADDRESS,
            HWGarageCard: EMULATOR_ADDRESS,
            HWGaragePackV2: EMULATOR_ADDRESS,
            HWGarageCardV2: EMULATOR_ADDRESS,
            HWGarageTokenV2: EMULATOR_ADDRESS,
            BBxBarbiePack: EMULATOR_ADDRESS,
            BBxBarbieCard: EMULATOR_ADDRESS,
            BBxBarbieToken: EMULATOR_ADDRESS,
            Gamisodes: EMULATOR_ADDRESS,
            TokenForwarding: EMULATOR_ADDRESS,
            NiftoryNFTRegistry: EMULATOR_ADDRESS,
            NiftoryNonFungibleToken: EMULATOR_ADDRESS,
        },
    },
    testnet: {
        protocolFee: { account: TESTNET_RARIBLE_ADDRESS, value: PROTOCOL_FEE },
        mainAddressMap: {
            NonFungibleToken: toFlowAddress("0x631e88ae7f1d7c20"),
            FungibleToken: toFlowAddress("0x9a0766d93b6608b7"),
            FUSD: toFlowAddress("0xe223d8a629e49c68"),
            FlowToken: toFlowAddress("0x7e60df042a9c0868"),
            FiatToken: toFlowAddress("0xa983fecbed621163"),
            NFTStorefront: toFlowAddress("0x94b06cfca1d8a476"),
            NFTStorefrontV2: toFlowAddress("0x2d55b98eb200daef"),
            MotoGPCard: toFlowAddress("0x01658d9b94068f3c"),
            Evolution: toFlowAddress("0x01658d9b94068f3c"),
            TopShot: toFlowAddress("0x01658d9b94068f3c"),
            TopShotFee: TESTNET_RARIBLE_ADDRESS,
            RaribleFee: TESTNET_RARIBLE_ADDRESS,
            RaribleOrder: TESTNET_RARIBLE_ADDRESS,
            RaribleNFT: TESTNET_RARIBLE_ADDRESS,
            LicensedNFT: TESTNET_RARIBLE_ADDRESS,
            RaribleOpenBid: toFlowAddress("0x1d56d7ba49283a88"),
            MugenNFT: TESTNET_RARIBLE_ADDRESS,
            CNN_NFT: TESTNET_RARIBLE_ADDRESS,
            MatrixWorldFlowFestNFT: toFlowAddress("0xe2f1b000e0203c1d"),
            MatrixWorldVoucher: TESTNET_RARIBLE_ADDRESS,
            DisruptArt: TESTNET_RARIBLE_ADDRESS,
            Art: TESTNET_RARIBLE_ADDRESS,
            StarlyCard: TESTNET_RARIBLE_ADDRESS,
            OneFootballCollectible: TESTNET_RARIBLE_ADDRESS,
            ChainmonstersRewards: TESTNET_RARIBLE_ADDRESS,
            MetadataViews: toFlowAddress("0x631e88ae7f1d7c20"),
            BarterYardPackNFT: toFlowAddress("0x4300fc3a11778a9a"),
            Moments: TESTNET_RARIBLE_ADDRESS,
            FanfareNFTContract: TESTNET_RARIBLE_ADDRESS,
            Kicks: TESTNET_RARIBLE_ADDRESS,
            SomePlaceCollectible: toFlowAddress("0x0c153e28da9f988a"),
            IrNFT: toFlowAddress("0x0131dc3d737d7735"),
            IrVoucher: toFlowAddress("0x0131dc3d737d7735"),
            GeniaceNFT: toFlowAddress("0x99eb28310626e56a"),
            CryptoPiggo: toFlowAddress("0x57e1b27618c5bb69"),
            HWGaragePack: toFlowAddress("0x1c3aa9059373c4ed"),
            HWGarageCard: toFlowAddress("0x1c3aa9059373c4ed"),
            HWGaragePackV2: toFlowAddress("0x1c3aa9059373c4ed"),
            HWGarageCardV2: toFlowAddress("0x1c3aa9059373c4ed"),
            HWGarageTokenV2: toFlowAddress("0x1c3aa9059373c4ed"),
            BBxBarbiePack: toFlowAddress("0x6b3176ca674d7fec"),
            BBxBarbieCard: toFlowAddress("0x6b3176ca674d7fec"),
            BBxBarbieToken: toFlowAddress("0x6b3176ca674d7fec"),
            Gamisodes: toFlowAddress("0x371ebe4bc55f8925"),
            TokenForwarding: toFlowAddress("0x51ea0e37c27a1f1a"),
            NiftoryNFTRegistry: toFlowAddress("0x04f74f0252479aed"),
            NiftoryNonFungibleToken: toFlowAddress("0x04f74f0252479aed"),
        },
    },
    mainnet: {
        protocolFee: { account: toFlowAddress("0x7f599d6dd7fd7e7b"), value: PROTOCOL_FEE },
        mainAddressMap: {
            NonFungibleToken: toFlowAddress("0x1d7e57aa55817448"),
            FungibleToken: toFlowAddress("0xf233dcee88fe0abe"),
            FUSD: toFlowAddress("0x3c5959b568896393"),
            FiatToken: toFlowAddress("0xb19436aae4d94622"),
            FlowToken: toFlowAddress("0x1654653399040a61"),
            NFTStorefront: toFlowAddress("0x4eb8a10cb9f87357"),
            NFTStorefrontV2: toFlowAddress("0x4eb8a10cb9f87357"),
            MotoGPCard: toFlowAddress("0xa49cc0ee46c54bfb"),
            Evolution: toFlowAddress("0xf4264ac8f3256818"),
            TopShot: toFlowAddress("0b2a3299cc857e29"),
            TopShotFee: toFlowAddress("0xbd69b6abdfcf4539"),
            RaribleFee: MAINNET_RARIBLE_ADDRESS,
            RaribleOrder: MAINNET_RARIBLE_ADDRESS,
            RaribleNFT: MAINNET_RARIBLE_ADDRESS,
            LicensedNFT: MAINNET_RARIBLE_ADDRESS,
            RaribleOpenBid: MAINNET_RARIBLE_ADDRESS,
            MugenNFT: toFlowAddress("0x2cd46d41da4ce262"),
            CNN_NFT: toFlowAddress("0x329feb3ab062d289"),
            MatrixWorldFlowFestNFT: toFlowAddress("0x2d2750f240198f91"),
            MatrixWorldVoucher: toFlowAddress("0x0d77ec47bbad8ef6"),
            DisruptArt: toFlowAddress("0xcd946ef9b13804c6"),
            Art: toFlowAddress("0xd796ff17107bbff6"),
            StarlyCard: toFlowAddress("0x5b82f21c0edf76e3"),
            OneFootballCollectible: toFlowAddress("0x6831760534292098"),
            ChainmonstersRewards: toFlowAddress("0x93615d25d14fa337"),
            MetadataViews: toFlowAddress("0x1d7e57aa55817448"),
            BarterYardPackNFT: toFlowAddress("0xa95b021cf8a30d80"),
            Moments: toFlowAddress("0xd4ad4740ee426334"),
            FanfareNFTContract: toFlowAddress("0xe3d6aefbdc74f65f"),
            Kicks: toFlowAddress("0xf3cc54f4d91c2f6c"),
            SomePlaceCollectible: toFlowAddress("0x667a16294a089ef8"),
            IrNFT: toFlowAddress("0x276a7cc9316712af"),
            IrVoucher: toFlowAddress("0x276a7cc9316712af"),
            GeniaceNFT: toFlowAddress("0xabda6627c70c7f52"),
            CryptoPiggo: toFlowAddress("0xd3df824bf81910a4"),
            HWGaragePack: toFlowAddress("0xd0bcefdf1e67ea85"),
            HWGarageCard: toFlowAddress("0xd0bcefdf1e67ea85"),
            HWGaragePackV2: toFlowAddress("0xd0bcefdf1e67ea85"),
            HWGarageCardV2: toFlowAddress("0xd0bcefdf1e67ea85"),
            HWGarageTokenV2: toFlowAddress("0xd0bcefdf1e67ea85"),
            BBxBarbiePack: toFlowAddress("0xe5bf4d436ca23932"),
            BBxBarbieCard: toFlowAddress("0xe5bf4d436ca23932"),
            BBxBarbieToken: toFlowAddress("0xe5bf4d436ca23932"),
            Gamisodes: toFlowAddress("0x09e04bdbcccde6ca"),
            TokenForwarding: toFlowAddress("0xe544175ee0461c4b"),
            NiftoryNFTRegistry: toFlowAddress("0x7ec1f607f0872a9e"),
            NiftoryNonFungibleToken: toFlowAddress("0x7ec1f607f0872a9e"),
        },
    },
};
export var EmulatorCollections;
(function (EmulatorCollections) {
    EmulatorCollections["RARIBLE"] = "A.0xf8d6e0586b0a20c7.RaribleNFT";
    EmulatorCollections["MOTOGP"] = "A.0xf8d6e0586b0a20c7.MotoGPCard";
    EmulatorCollections["EVOLUTION"] = "A.0xf8d6e0586b0a20c7.Evolution";
    EmulatorCollections["TOPSHOT"] = "A.0xf8d6e0586b0a20c7.TopShot";
    EmulatorCollections["MUGENNFT"] = "A.0xf8d6e0586b0a20c7.MugenNFT";
    EmulatorCollections["CNNNFT"] = "A.0xf8d6e0586b0a20c7.CNN_NFT";
    EmulatorCollections["MATRIXFEST"] = "A.0xf8d6e0586b0a20c7.MatrixWorldFlowFestNFT";
    EmulatorCollections["MATRIXLANDVAUCHER"] = "A.0xf8d6e0586b0a20c7.MatrixWorldVoucher";
})(EmulatorCollections || (EmulatorCollections = {}));
export var TestnetCollections;
(function (TestnetCollections) {
    TestnetCollections["RARIBLE"] = "A.ebf4ae01d1284af8.RaribleNFT";
    TestnetCollections["MOTOGP"] = "A.01658d9b94068f3c.MotoGPCard";
    TestnetCollections["EVOLUTION"] = "A.01658d9b94068f3c.Evolution";
    TestnetCollections["TOPSHOT"] = "A.01658d9b94068f3c.TopShot";
    TestnetCollections["MUGENNFT"] = "A.ebf4ae01d1284af8.MugenNFT";
    TestnetCollections["CNNNFT"] = "A.ebf4ae01d1284af8.CNN_NFT";
    TestnetCollections["MATRIXFEST"] = "A.e2f1b000e0203c1d.MatrixWorldFlowFestNFT";
    TestnetCollections["HWGarageCard"] = "A.0x1c3aa9059373c4ed.HWGarageCard";
    TestnetCollections["HWGaragePack"] = "A.0x1c3aa9059373c4ed.HWGaragePack";
    TestnetCollections["HWGarageCardV2"] = "A.0x1c3aa9059373c4ed.HWGarageCardV2";
    TestnetCollections["HWGaragePackV2"] = "A.0x1c3aa9059373c4ed.HWGaragePackV2";
    TestnetCollections["HWGarageTokenV2"] = "A.0x1c3aa9059373c4ed.HWGarageTokenV2";
    TestnetCollections["BBxBarbiePack"] = "A.0x6b3176ca674d7fec.BBxBarbiePack";
    TestnetCollections["BBxBarbieCard"] = "A.0x6b3176ca674d7fec.BBxBarbieCard";
    TestnetCollections["BBxBarbieToken"] = "A.0x6b3176ca674d7fec.BBxBarbieToken";
    TestnetCollections["Gamisodes"] = "A.0x371ebe4bc55f8925.Gamisodes";
})(TestnetCollections || (TestnetCollections = {}));
export var MainnetCollections;
(function (MainnetCollections) {
    MainnetCollections["RARIBLE"] = "A.01ab36aaf654a13e.RaribleNFT";
    MainnetCollections["MOTOGP"] = "A.a49cc0ee46c54bfb.MotoGPCard";
    MainnetCollections["EVOLUTION"] = "A.f4264ac8f3256818.Evolution";
    MainnetCollections["TOPSHOT"] = "A.0b2a3299cc857e29.TopShot";
    MainnetCollections["MUGENNFT"] = "A.2cd46d41da4ce262.MugenNFT";
    MainnetCollections["CNNNFT"] = "A.329feb3ab062d289.CNN_NFT";
    MainnetCollections["MATRIXFEST"] = "A.2d2750f240198f91.MatrixWorldFlowFestNFT";
    MainnetCollections["MATRIXLANDVAUCHER"] = "A.0d77ec47bbad8ef6.MatrixWorldVoucher";
})(MainnetCollections || (MainnetCollections = {}));
