import { __awaiter, __generator } from "tslib";
import { runTransaction, waitForSeal } from "../common/transaction";
import { getNftCode } from "../tx-code-store/nft";
import { getCollectionConfig } from "../common/collection/get-config";
export function burn(fcl, auth, network, collection, tokenId) {
    return __awaiter(this, void 0, void 0, function () {
        var _a, config, map, name_1, txId;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!fcl) return [3 /*break*/, 3];
                    _a = getCollectionConfig(network, collection), config = _a.config, map = _a.map, name_1 = _a.name;
                    if (!config.features.includes("BURN")) return [3 /*break*/, 2];
                    return [4 /*yield*/, runTransaction(fcl, map, getNftCode(name_1).burn(fcl, tokenId), auth)];
                case 1:
                    txId = _b.sent();
                    return [2 /*return*/, waitForSeal(fcl, txId)];
                case 2: throw new Error("This collection doesn't support 'burn' action");
                case 3: throw new Error("Fcl is required for burn");
            }
        });
    });
}
