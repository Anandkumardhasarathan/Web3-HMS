import { __awaiter, __generator } from "tslib";
import { runTransaction, waitForSeal } from "../common/transaction";
import { getCollectionConfig } from "../common/collection/get-config";
import { getBidCode } from "../tx-code-store/order/rarible-open-bid";
export function cancelBid(fcl, auth, network, collection, orderId) {
    return __awaiter(this, void 0, void 0, function () {
        var _a, name_1, map, txId;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!fcl) return [3 /*break*/, 2];
                    _a = getCollectionConfig(network, collection), name_1 = _a.name, map = _a.map;
                    return [4 /*yield*/, runTransaction(fcl, map, getBidCode(fcl, name_1).cancel(orderId), auth)];
                case 1:
                    txId = _b.sent();
                    return [2 /*return*/, waitForSeal(fcl, txId)];
                case 2: throw new Error("Fcl is required for cancelling order");
            }
        });
    });
}
