import type { Fcl } from "@rarible/fcl-types";
import type { FlowContractAddress, Maybe } from "@rarible/types";
import type { FlowNftItemControllerApi } from "@rarible/flow-api-client";
import type { AuthWithPrivateKey, FlowCurrency, FlowNetwork, FlowOriginFees, FlowPayouts, FlowTransaction } from "../types";
import type { FlowItemId } from "../common/item";
export type FlowSellRequest = {
    collection: FlowContractAddress;
    currency: FlowCurrency;
    itemId: FlowItemId;
    sellItemPrice: string;
    originFees?: FlowOriginFees;
    payouts?: FlowPayouts;
    end?: Date;
};
export interface FlowSellResponse extends FlowTransaction {
    orderId: string;
}
export declare function sell(fcl: Maybe<Fcl>, itemApi: FlowNftItemControllerApi, auth: AuthWithPrivateKey, network: FlowNetwork, request: FlowSellRequest): Promise<FlowSellResponse>;
