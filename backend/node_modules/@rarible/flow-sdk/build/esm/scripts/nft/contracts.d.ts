export interface ContractsAddresses {
    name: string;
    mainnetAddress: string;
    testnetAddress: string;
    testnetAddressRaribleDeployed: string;
}
export declare enum TypeOfContract {
    COLLECTION = "Collection",
    STOREFRONT = "Storefront"
}
export interface ContractDetails {
    storagePath: string;
    publicPath: string;
    publicType: string;
    contractType: TypeOfContract;
    nameOfMethodForCreateResource: string;
}
export interface NFTColectionDetails {
    privatePath: string;
}
export declare const NonFungibleToken: ContractsAddresses;
export declare const MetadataViews: ContractsAddresses;
export declare const FungibleToken: ContractsAddresses;
export declare const FlowToken: ContractsAddresses;
export declare const NFTStorefrontV2: ContractsAddresses & ContractDetails;
export declare const HWGaragePack: ContractsAddresses & ContractDetails & NFTColectionDetails;
export declare const HWGaragePackV2: ContractsAddresses & ContractDetails & NFTColectionDetails;
export declare const HWGarageCard: ContractsAddresses & ContractDetails & NFTColectionDetails;
export declare const HWGarageCardV2: ContractsAddresses & ContractDetails & NFTColectionDetails;
export declare const HWGarageTokenV2: ContractsAddresses & ContractDetails & NFTColectionDetails;
export declare const BBxBarbiePack: ContractsAddresses & ContractDetails & NFTColectionDetails;
export declare const BBxBarbieCard: ContractsAddresses & ContractDetails & NFTColectionDetails;
export type WhitelabelCollection = "HWGaragePack" | "HWGarageCard" | "HWGarageCardV2" | "HWGaragePackV2" | "HWGarageTokenV2" | "BBxBarbiePack" | "BBxBarbieCard" | "BBxBarbieToken" | "Gamisodes";
