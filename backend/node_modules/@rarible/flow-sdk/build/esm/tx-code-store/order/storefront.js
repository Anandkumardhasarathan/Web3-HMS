import * as t from "@onflow/types";
import { prepareFees } from "../common/conver-fee-to-cadence";
import { Storefront } from "../../scripts/storefront/storefront";
import { prepareOrderCode } from "./prepare-order-code";
export function getOrderCode(fcl, collectionName) {
    return {
        create: function (currency, itemId, fees) {
            return {
                cadence: prepareOrderCode(Storefront.createSellOrder, collectionName, currency),
                args: fcl.args([
                    fcl.arg(itemId, t.UInt64), fcl.arg(prepareFees(fees), t.Dictionary({
                        key: t.Address,
                        value: t.UFix64,
                    })),
                ]),
            };
        },
        update: function (currency, orderId, fees) {
            return {
                cadence: prepareOrderCode(Storefront.updateOrder, collectionName, currency),
                args: fcl.args([
                    fcl.arg(orderId, t.UInt64), fcl.arg(prepareFees(fees), t.Dictionary({
                        key: t.Address,
                        value: t.UFix64,
                    })),
                ]),
            };
        },
        buy: function (currency, orderId, address, fees) {
            return {
                cadence: prepareOrderCode(Storefront.buy, collectionName, currency),
                args: fcl.args([
                    fcl.arg(orderId, t.UInt64),
                    fcl.arg(address, t.Address),
                    fcl.arg(prepareFees(fees), t.Dictionary({ key: t.Address, value: t.UFix64 })),
                ]),
            };
        },
        cancel: function (orderId) {
            return {
                cadence: Storefront.cancelOrder,
                args: fcl.args([fcl.arg(orderId, t.UInt64)]),
            };
        },
    };
}
