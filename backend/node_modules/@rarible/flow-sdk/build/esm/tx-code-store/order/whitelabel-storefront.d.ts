import type { Fcl, FclArgs } from "@rarible/fcl-types";
import type { FlowAddress } from "@rarible/types";
import type { BigNumberValue } from "@rarible/utils";
import type { NonFungibleContract } from "../../types";
import type { FlowCurrency } from "../../types";
type GenerateCodeMethodResponse = {
    cadence: string;
    args: ReturnType<FclArgs>;
};
export type GarageCollection = "HWGaragePack" | "HWGarageCard" | "HWGarageCardV2" | "HWGaragePackV2" | "HWGarageTokenV2";
export declare function isGarageCollection(collection: string): collection is GarageCollection;
export type BarbieCollection = "BBxBarbiePack" | "BBxBarbieCard" | "BBxBarbieToken";
export declare function isBarbieCollection(collection: string): collection is BarbieCollection;
export declare function isGamisodesCollection(collection: string): collection is GamisodesCollection;
export type GamisodesCollection = "Gamisodes";
export type WhitelabelCollection = GarageCollection | BarbieCollection | GamisodesCollection;
export declare function isWhitelabelCollection(collection: string): collection is WhitelabelCollection;
export declare function getWhitelabelOrderCode(fcl: Fcl, collectionName: NonFungibleContract): {
    create(o: {
        collectionName: WhitelabelCollection;
        itemId: number;
        saleItemPrice: BigNumberValue;
        customID?: string;
        commissionAmount: BigNumberValue;
        expiry: number;
        marketplacesAddress: FlowAddress[];
        currency: FlowCurrency;
    }): GenerateCodeMethodResponse;
    update(o: {
        collectionName: WhitelabelCollection;
        orderId: number;
        itemId: number;
        saleItemPrice: BigNumberValue;
        customID?: string;
        commissionAmount: BigNumberValue;
        expiry: number;
        marketplacesAddress: FlowAddress[];
        currency: FlowCurrency;
    }): GenerateCodeMethodResponse;
    buy(o: {
        orderId: number;
        address: string;
        currency: FlowCurrency;
        comissionRecipient?: string;
    }): GenerateCodeMethodResponse;
    cancel(orderId: number): GenerateCodeMethodResponse;
    setupVault(): GenerateCodeMethodResponse;
};
export {};
