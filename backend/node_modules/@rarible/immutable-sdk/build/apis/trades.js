"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImxTradesControllerApi = void 0;
const tslib_1 = require("tslib");
const ethereum_api_client_1 = require("@rarible/ethereum-api-client");
class ImxTradesControllerApi extends ethereum_api_client_1.BaseAPI {
    constructor(configuration) {
        super(configuration);
    }
    getTradesRaw(requestParameters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: "/trades?party_b_token_type=" +
                    encodeURIComponent(requestParameters.tokenType) +
                    "&party_b_token_address=" +
                    encodeURIComponent(requestParameters.tokenAddress) +
                    "&party_b_token_id=" +
                    encodeURIComponent(requestParameters.tokenId),
                method: "GET",
                headers: headerParameters,
                query: queryParameters,
            });
            return new ethereum_api_client_1.JSONApiResponse(response, jsonValue => jsonValue);
        });
    }
    /**
     */
    getTrades(requestParameters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const response = yield this.getTradesRaw(requestParameters);
            return yield response.value();
        });
    }
}
exports.ImxTradesControllerApi = ImxTradesControllerApi;
