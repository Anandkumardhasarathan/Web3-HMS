"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImxUserControllerApi = void 0;
const tslib_1 = require("tslib");
const ethereum_api_client_1 = require("@rarible/ethereum-api-client");
class ImxUserControllerApi extends ethereum_api_client_1.BaseAPI {
    getImxUserStarkKeysRaw(requestParameters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (requestParameters.address === null || requestParameters.address === undefined) {
                throw new ethereum_api_client_1.RequiredError("address", "Required parameter requestParameters.address was null or undefined when calling getImxUserStarkKeys.");
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: "/users/{address}".replace(`{${"address"}}`, encodeURIComponent(String(requestParameters.address))),
                method: "GET",
                headers: headerParameters,
                query: queryParameters,
            });
            return new ethereum_api_client_1.JSONApiResponse(response, jsonValue => jsonValue);
        });
    }
    /**
     */
    getImxUserStarkKeys(requestParameters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const response = yield this.getImxUserStarkKeysRaw(requestParameters);
            return yield response.value();
        });
    }
}
exports.ImxUserControllerApi = ImxUserControllerApi;
