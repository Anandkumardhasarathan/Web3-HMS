"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.burn = void 0;
const tslib_1 = require("tslib");
const imx_sdk_1 = require("@imtbl/imx-sdk");
const types_1 = require("@rarible/types");
const get_tranfer_response_1 = require("./common/get-tranfer-response");
function burn(link, request) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        if (link === undefined) {
            throw new Error("Wallet undefined");
        }
        const { assetClass, tokenId, contract } = request;
        if (assetClass !== imx_sdk_1.ERC721TokenType.ERC721) {
            throw new Error("Unsupported assetClass");
        }
        const { result } = yield link.transfer([
            {
                type: imx_sdk_1.ERC721TokenType.ERC721,
                tokenId: tokenId,
                tokenAddress: contract,
                toAddress: types_1.ZERO_ADDRESS,
            },
        ]);
        if (!result || !result[0]) {
            throw new Error(`Imx burn error: result is empty (${JSON.stringify(result)})`);
        }
        const resp = result[0];
        return (0, get_tranfer_response_1.getTransferResponse)(resp);
    });
}
exports.burn = burn;
