import { Link } from "@imtbl/imx-sdk";
import type { ConfigurableIframeOptions } from "@imtbl/imx-sdk";
import type { ImxConnectionData, ImxConnectResult, ImxEnv, ImxNetwork, ImxNetworkConfig } from "./domain";
import { ImxWalletProviderEnum } from "./domain";
import { IMX_ENV_CONFIG, IMX_NETWORK_CONFIG } from "./config";
export declare class ImxWallet {
    private readonly env;
    private readonly provider;
    private readonly iframeOptions?;
    private readonly storage;
    private state;
    private status;
    network: {
        env: ImxEnv;
        network: ImxNetwork;
        linkAddress: string;
        gasLimit?: string | undefined;
        gasPrice?: string | undefined;
        enableDebug?: boolean | undefined;
    };
    readonly link: Link;
    constructor(env: ImxEnv, provider?: ImxWalletProviderEnum, iframeOptions?: ConfigurableIframeOptions | undefined, storage?: Storage);
    connect: () => Promise<ImxConnectResult>;
    disconnect: () => void;
    getConnectionData: () => ImxConnectionData;
    private getSetupOptions;
    private setValue;
}
export type { ImxNetwork, ImxEnv, ImxNetworkConfig, ImxWalletProviderEnum };
export { IMX_NETWORK_CONFIG, IMX_ENV_CONFIG };
