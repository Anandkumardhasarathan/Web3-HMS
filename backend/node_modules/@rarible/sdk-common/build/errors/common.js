"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FAILED_TO_FETCH_ERROR = exports.UserCancelError = exports.WrappedError = exports.WalletIsUndefinedError = void 0;
const utils_1 = require("../utils");
class WalletIsUndefinedError extends Error {
    constructor() {
        super("Wallet is not defined");
        this.name = "WalletIsUndefinedError";
        Object.setPrototypeOf(this, WalletIsUndefinedError.prototype);
    }
}
exports.WalletIsUndefinedError = WalletIsUndefinedError;
class WrappedError extends Error {
    constructor(error, msg) {
        super(msg);
        this.__IS_WRAPPED_ERROR__ = true;
        Object.setPrototypeOf(this, WrappedError.prototype);
        this.error = error;
    }
    static isWrappedError(original) {
        if (original instanceof WrappedError)
            return true;
        if ((0, utils_1.isObjectLike)(original)) {
            if (original.constructor.name === "WrappedError")
                return true;
            if (original.__IS_WRAPPED_ERROR__)
                return true;
        }
        return false;
    }
}
exports.WrappedError = WrappedError;
class UserCancelError extends WrappedError {
    constructor(error) {
        super(error, "Request cancelled by user");
        this.__IS_WRAPPED_ERROR__ = true;
        this.name = "UserCancelError";
        Object.setPrototypeOf(this, UserCancelError.prototype);
    }
}
exports.UserCancelError = UserCancelError;
exports.FAILED_TO_FETCH_ERROR = "Failed to fetch";
