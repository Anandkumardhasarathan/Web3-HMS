"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportedBlockchains = exports.NonEVMBlockchains = exports.isEVMBlockchain = exports.EVMBlockchains = void 0;
const api_client_1 = require("@rarible/api-client");
exports.EVMBlockchains = [
    api_client_1.Blockchain.ETHEREUM,
    api_client_1.Blockchain.POLYGON,
    api_client_1.Blockchain.MANTLE,
    api_client_1.Blockchain.ARBITRUM,
    api_client_1.Blockchain.ZKSYNC,
    api_client_1.Blockchain.CHILIZ,
    api_client_1.Blockchain.LIGHTLINK,
    api_client_1.Blockchain.RARI,
    api_client_1.Blockchain.ASTARZKEVM,
    api_client_1.Blockchain.BASE,
    api_client_1.Blockchain.FIEF,
    api_client_1.Blockchain.XAI,
    api_client_1.Blockchain.KROMA,
    api_client_1.Blockchain.CELO,
    api_client_1.Blockchain.SAAKURU,
    api_client_1.Blockchain.OASYS,
    api_client_1.Blockchain.SEI,
    api_client_1.Blockchain.MOONBEAM,
    api_client_1.Blockchain.PALM,
    api_client_1.Blockchain.ETHERLINK,
    api_client_1.Blockchain.LISK,
    api_client_1.Blockchain.ALEPHZERO,
    api_client_1.Blockchain.MATCH,
    api_client_1.Blockchain.FIVIRE,
    api_client_1.Blockchain.SHAPE,
    api_client_1.Blockchain.BERACHAIN,
    api_client_1.Blockchain.TELOS,
    api_client_1.Blockchain.ABSTRACT,
    api_client_1.Blockchain.VICTION,
    api_client_1.Blockchain.HEDERAEVM,
    api_client_1.Blockchain.GOAT,
];
function isEVMBlockchain(blockchain) {
    return exports.EVMBlockchains.includes(blockchain);
}
exports.isEVMBlockchain = isEVMBlockchain;
exports.NonEVMBlockchains = [
    api_client_1.Blockchain.FLOW,
    api_client_1.Blockchain.TEZOS,
    api_client_1.Blockchain.SOLANA,
    api_client_1.Blockchain.ECLIPSE,
    api_client_1.Blockchain.IMMUTABLEX,
    api_client_1.Blockchain.APTOS,
];
exports.SupportedBlockchains = [...exports.EVMBlockchains, ...exports.NonEVMBlockchains];
