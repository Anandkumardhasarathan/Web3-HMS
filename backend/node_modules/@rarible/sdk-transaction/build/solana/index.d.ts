/// <reference types="@project-serum/anchor/node_modules/@solana/web3.js" />
/// <reference types="@project-serum/anchor/node_modules/@solana/web3.js" />
import { Blockchain } from "@rarible/api-client";
import type { TransactionResult } from "@rarible/solana-sdk";
import type { Cluster, Connection } from "@solana/web3.js";
import type { IBlockchainTransaction } from "../domain";
export interface ISolanaSdk {
    cluster: Cluster;
    confirmTransaction(...args: Parameters<typeof Connection.prototype.confirmTransaction>): ReturnType<typeof Connection.prototype.confirmTransaction>;
}
export declare class BlockchainSolanaTransaction implements IBlockchainTransaction {
    transaction: TransactionResult;
    blockchain: Blockchain;
    cluster: string;
    getSdk: () => ISolanaSdk;
    constructor(transaction: TransactionResult, sdk: ISolanaSdk, blockchain?: Blockchain);
    hash(): string;
    wait(): Promise<{
        blockchain: Blockchain;
        hash: string;
    }>;
    getTxLink(): string;
    get isEmpty(): boolean;
}
