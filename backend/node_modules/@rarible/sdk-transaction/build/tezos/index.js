"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockchainTezosTransaction = void 0;
const tslib_1 = require("tslib");
const api_client_1 = require("@rarible/api-client");
class BlockchainTezosTransaction {
    constructor(transaction, network) {
        this.transaction = transaction;
        this.network = network;
        this.blockchain = api_client_1.Blockchain.TEZOS;
    }
    hash() {
        return this.transaction.hash;
    }
    wait() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.transaction.confirmation();
            return {
                blockchain: this.blockchain,
                hash: this.transaction.hash,
            };
        });
    }
    getTxLink() {
        switch (this.network) {
            case "testnet":
            case "dev":
                return `https://ghostnet.tzkt.io/${this.hash()}`;
            case "mainnet":
                return `https://tzkt.io/${this.hash()}`;
            default:
                throw new Error("Unsupported transaction network");
        }
    }
    get isEmpty() {
        return false;
    }
}
exports.BlockchainTezosTransaction = BlockchainTezosTransaction;
