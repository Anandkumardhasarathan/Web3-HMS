import * as EthereumApiClient from "@rarible/ethereum-api-client";
import type { Maybe } from "@rarible/types";
import type { Ethereum } from "@rarible/ethereum-provider";
import type { EthereumNetwork } from "../types";
import type { IRaribleEthereumSdkConfig } from "../types";
export type RaribleEthereumApis = {
    nftItem: EthereumApiClient.NftItemControllerApi;
    nftOwnership: EthereumApiClient.NftOwnershipControllerApi;
    order: EthereumApiClient.OrderControllerApi;
    orderActivity: EthereumApiClient.OrderActivityControllerApi;
    orderSignature: EthereumApiClient.OrderSignatureControllerApi;
    orderSettings: EthereumApiClient.OrderSettingsControllerApi;
    nftCollection: EthereumApiClient.NftCollectionControllerApi;
    balances: EthereumApiClient.BalanceControllerApi;
    gateway: EthereumApiClient.GatewayControllerApi;
    nftLazyMint: EthereumApiClient.NftLazyMintControllerApi;
};
export declare function createEthereumApis(env: EthereumNetwork, params?: EthereumApiClient.ConfigurationParameters): RaribleEthereumApis;
export declare function getApis(ethereum: Maybe<Ethereum>, env: EthereumNetwork, sdkConfig?: IRaribleEthereumSdkConfig): Promise<RaribleEthereumApis>;
