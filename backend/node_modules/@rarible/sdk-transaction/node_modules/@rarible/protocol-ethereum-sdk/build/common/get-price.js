"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPriceDecimal = exports.getPrice = void 0;
const tslib_1 = require("tslib");
const utils_1 = require("@rarible/utils");
const get_decimals_1 = require("./get-decimals");
function getPrice(ethereum, assetType, priceDecimal) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const decimals = yield (0, get_decimals_1.getDecimals)(ethereum, assetType);
        switch (assetType.assetClass) {
            case "ETH":
                return (0, utils_1.toBn)(priceDecimal).multipliedBy((0, utils_1.toBn)(10).pow(decimals));
            case "ERC20":
                return (0, utils_1.toBn)(priceDecimal).multipliedBy((0, utils_1.toBn)(10).pow(Number(decimals)));
            default:
                throw new Error(`Asset type should be either ETH or ERC-20, received=${JSON.stringify(assetType)}`);
        }
    });
}
exports.getPrice = getPrice;
function getPriceDecimal(ethereum, assetType, price) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const decimals = yield (0, get_decimals_1.getDecimals)(ethereum, assetType);
        const divider = (0, utils_1.toBn)(10).pow(decimals);
        switch (assetType.assetClass) {
            case "ETH":
            case "ERC20":
                return (0, utils_1.toBn)(price).div(divider);
            default:
                throw new Error(`Asset type should be either ETH or ERC-20, received=${JSON.stringify(assetType)}`);
        }
    });
}
exports.getPriceDecimal = getPriceDecimal;
