"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.victionTestnetConfig = void 0;
const types_1 = require("@rarible/types");
const api_client_1 = require("@rarible/api-client");
const id_1 = require("../common/id");
const utils_1 = require("./utils");
exports.victionTestnetConfig = (0, utils_1.extendConfig)({
    basePath: "https://testnet-viction-api.rarible.org",
    chainId: 89,
    environment: "testnet",
    blockchain: api_client_1.Blockchain.VICTION,
    exchange: {
        v2: (0, types_1.toEVMAddress)("0xb708CB47976D253614F6b3b4E878959f208799B9"), // ExchangeMetaV2
        wrapper: (0, types_1.toEVMAddress)("0x3cB4beaac289aC699A6b6d1d6FC2363fb9e3C648"), // RaribleExchangeWrapper
    },
    transferProxies: {
        nft: (0, types_1.toEVMAddress)("0x6eE1644ae1f6023B277c686bF832d0adcD4DFd91"), // TransferProxy
        erc20: (0, types_1.toEVMAddress)("0x79B7dC2794860c7066e020a9d90f21FA0c8BEe83"), // ERC20TransferProxy
        erc721Lazy: (0, types_1.toEVMAddress)("0x0C6373B1715d4Cc02B4994b488c79772dd2aE2e0"), // ERC721LazyMintTransferProxy
        erc1155Lazy: (0, types_1.toEVMAddress)("0x18DdB853D32f2dBd11054d5C0ffB68d41D18AE50"), // ERC1155LazyMintTransferProxy
    },
    openSea: {
        metadata: (0, id_1.id32)("RARIBLE"),
    },
    factories: {
        erc721: (0, types_1.toEVMAddress)("0x397a9BAD5c7FFa1e297c3f2F3243D92E3c3B6D8a"), // ERC721RaribleFactoryC2
        erc1155: (0, types_1.toEVMAddress)("0xE7E6210560830181CccF72cB73cdeC8dDcC40969"), // ERC1155RaribleFactoryC2
    },
    weth: (0, types_1.toEVMAddress)("0xcC1141eEd15EB519b08cA38A2Ee75AB8025F0DA9"),
});
