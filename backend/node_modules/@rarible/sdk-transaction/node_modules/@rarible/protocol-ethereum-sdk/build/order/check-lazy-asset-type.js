"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkLazyAssetType = void 0;
const tslib_1 = require("tslib");
function checkLazyAssetType(getApis, type) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const apis = yield getApis();
        switch (type.assetClass) {
            case "ERC1155":
            case "ERC721": {
                const itemResponse = yield apis.nftItem.getNftItemByIdRaw({ itemId: `${type.contract}:${type.tokenId}` });
                if (itemResponse.status === 200 && itemResponse.value.lazySupply === "0") {
                    return type;
                }
                const lazyResponse = yield apis.nftItem.getNftLazyItemByIdRaw({ itemId: `${type.contract}:${type.tokenId}` });
                if (lazyResponse.status === 200) {
                    const lazy = lazyResponse.value;
                    switch (lazy["@type"]) {
                        case "ERC721": {
                            return Object.assign(Object.assign({}, lazy), { assetClass: "ERC721_LAZY" });
                        }
                        case "ERC1155": {
                            return Object.assign(Object.assign({}, lazy), { assetClass: "ERC1155_LAZY" });
                        }
                        default:
                            return type;
                    }
                }
                return type;
            }
            default:
                return type;
        }
    });
}
exports.checkLazyAssetType = checkLazyAssetType;
