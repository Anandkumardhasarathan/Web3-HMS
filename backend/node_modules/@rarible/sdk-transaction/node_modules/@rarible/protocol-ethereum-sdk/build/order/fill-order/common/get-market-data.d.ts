import type { BigNumber } from "@rarible/types";
import type { NftItemRoyalty } from "@rarible/ethereum-api-client/build/models/NftItemRoyalty";
import type { BigNumberValue } from "@rarible/utils";
import type { Maybe } from "@rarible/types";
import type { Ethereum, EthereumSendOptions } from "@rarible/ethereum-provider";
import type { Part } from "@rarible/ethereum-api-client";
import type { AmmOrderFillRequest } from "../types";
import type { ExchangeWrapperOrderType } from "../types";
import type { RaribleEthereumApis } from "../../../common/apis";
export type GetMarketDataRequest = {
    request: AmmOrderFillRequest;
    fillData: {
        data: string;
        options: EthereumSendOptions;
    };
    feeValue?: BigNumber;
    marketId: ExchangeWrapperOrderType;
};
export declare function getMarketData(ethereum: Maybe<Ethereum>, apis: RaribleEthereumApis, { request, fillData, marketId, feeValue }: GetMarketDataRequest): Promise<{
    originFees: {
        totalFeeBasisPoints: number;
        encodedFeesValue: import("@rarible/types").BigNumberLike;
        feeAddresses: readonly [import("@rarible/types").EVMAddress, import("@rarible/types").EVMAddress];
    };
    data: {
        marketId: ExchangeWrapperOrderType;
        amount: string | number;
        fees: import("@rarible/types").BigNumberLike;
        data: string;
    };
    options: {
        value: string;
        gas?: number | undefined;
        gasPrice?: number | undefined;
        additionalData?: import("@rarible/types").Binary | undefined;
    };
}>;
export declare function getRoyaltiesAmount(royalty: NftItemRoyalty[], value: BigNumberValue): import("bignumber.js").default;
export declare function addFeeDependsOnExternalFee(originFees?: Part[], externalFee?: BigNumber): BigNumber;
export declare function encodeDataWithRoyalties({ royalties, data, provider, }: {
    royalties: NftItemRoyalty[];
    data: string;
    provider: Ethereum;
}): string;
export declare function getAmmItemsRoyalties(apis: RaribleEthereumApis, request: AmmOrderFillRequest): Promise<NftItemRoyalty[]>;
