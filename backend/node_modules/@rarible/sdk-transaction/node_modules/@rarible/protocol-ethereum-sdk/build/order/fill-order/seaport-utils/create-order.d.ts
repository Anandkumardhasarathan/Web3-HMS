import type { Ethereum } from "@rarible/ethereum-provider";
import { OrderType } from "./constants";
import type { CreateOrderInput, OrderParameters } from "./types";
export declare function createOrder(ethereum: Ethereum, { send, conduitKey, zone, startTime, endTime, offer, consideration, counter, allowPartialFills, restrictedByZone, fees, salt, }: CreateOrderInput): Promise<{
    parameters: {
        counter: any;
        offerer: string;
        zone: string;
        orderType: OrderType;
        startTime: import("bignumber.js").default.Value;
        endTime: import("bignumber.js").default.Value;
        zoneHash: string;
        salt: string;
        offer: import("./types").OfferItem[];
        consideration: import("./types").ConsiderationItem[];
        totalOriginalConsiderationItems: import("bignumber.js").default.Value;
        conduitKey: string;
    };
    signature: string;
}>;
export declare function getOrderTypeFromOrderOptions({ allowPartialFills, restrictedByZone, }: Pick<CreateOrderInput, "allowPartialFills" | "restrictedByZone">): OrderType;
export declare function signOrder(ethereum: Ethereum, orderParameters: OrderParameters, counter: number): Promise<string>;
