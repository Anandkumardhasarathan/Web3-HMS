import type { BigNumberValue } from "@rarible/utils";
import type { EVMAddress } from "@rarible/types";
import type { EthereumContract } from "@rarible/ethereum-provider";
import type { ConsiderationItem, InputCriteria, Order } from "./types";
import type { BalancesAndApprovals } from "./balance-and-approval-check";
import type { TimeBasedItemParams } from "./item";
export declare function getFulfillAdvancedOrderWrapperData({ order, unitsToFill, totalSize, totalFilled, offerCriteria, considerationCriteria, tips, extraData, offererBalancesAndApprovals, fulfillerBalancesAndApprovals, offererOperator, fulfillerOperator, timeBasedItemParams, conduitKey, recipientAddress, seaportContract, disableCheckingBalances, }: {
    order: Order;
    unitsToFill?: BigNumberValue;
    totalFilled: BigNumberValue;
    totalSize: BigNumberValue;
    offerCriteria: InputCriteria[];
    considerationCriteria: InputCriteria[];
    tips?: ConsiderationItem[];
    extraData?: string;
    seaportAddress: EVMAddress;
    offererBalancesAndApprovals: BalancesAndApprovals;
    fulfillerBalancesAndApprovals: BalancesAndApprovals;
    offererOperator: string;
    fulfillerOperator: string;
    conduitKey: string;
    recipientAddress: string;
    timeBasedItemParams: TimeBasedItemParams;
    seaportContract: EthereumContract;
    disableCheckingBalances?: boolean;
}): Promise<{
    data: string;
    value: string;
}>;
