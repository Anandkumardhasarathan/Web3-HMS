import type { Ethereum } from "@rarible/ethereum-provider";
import type { BigNumberValue } from "@rarible/utils";
import type { BigNumber } from "@rarible/types";
import type { EVMAddress } from "@rarible/types";
import type { SendFunction } from "../../../common/send-transaction";
import type { SimpleSeaportV1Order } from "../../types";
import { ExchangeWrapperOrderType } from "../types";
import type { PreparedOrderRequestDataForExchangeWrapper } from "../types";
export declare function prepareSeaportExchangeData(ethereum: Ethereum, send: SendFunction, simpleOrder: SimpleSeaportV1Order, { unitsToFill, encodedFeesValue, totalFeeBasisPoints, disableCheckingBalances, }: {
    unitsToFill?: BigNumberValue;
    encodedFeesValue: BigNumber;
    totalFeeBasisPoints: number;
    disableCheckingBalances?: boolean;
}): Promise<PreparedOrderRequestDataForExchangeWrapper>;
export declare function getMarketIdByOpenseaContract(contract: EVMAddress): ExchangeWrapperOrderType.SEAPORT_ADVANCED_ORDERS | ExchangeWrapperOrderType.SEAPORT_V14 | ExchangeWrapperOrderType.SEAPORT_V15 | ExchangeWrapperOrderType.SEAPORT_V16;
