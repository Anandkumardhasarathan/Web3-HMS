import type * as ApiClient from "@rarible/api-client";
import type { AssetType, EthErc20AssetType, EthEthereumAssetType, NativeCurrencyAssetType, TokenCurrencyAssetType } from "@rarible/api-client/build/models/AssetType";
import type { RequestCurrency, RequestCurrencyAssetType } from "./domain";
export declare function getCurrencyAssetType(currency: RequestCurrency): RequestCurrencyAssetType;
export declare function getCurrencyId(currency: RequestCurrency): ApiClient.CurrencyId;
export declare function isRequestCurrencyAssetType(x: RequestCurrency): x is ApiClient.CurrencyId;
export declare function isAssetType(x: RequestCurrency): x is RequestCurrencyAssetType;
export declare function isEth(x: AssetType): x is EthEthereumAssetType;
export declare function isErc20(x: AssetType): x is EthErc20AssetType;
export declare function isNativeCurrencyAssetType(x: AssetType): x is NativeCurrencyAssetType;
export declare function isTokenCurrencyAssetType(x: AssetType): x is TokenCurrencyAssetType;
export declare function convertAssetTypeToCurrencyId(id: RequestCurrencyAssetType): ApiClient.CurrencyId;
export declare function convertCurrencyIdToAssetType(id: ApiClient.CurrencyId): RequestCurrencyAssetType;
export declare function getDataFromCurrencyId(id: ApiClient.CurrencyId): {
    blockchain: ApiClient.Blockchain;
    id: string;
    contract: string;
    tokenId: string;
};
export declare function isValidBase64(input: string): boolean;
export declare function normalizeId(input: string): string;
export declare const XTZ: ApiClient.CurrencyId;
