import type { AbstractLogger } from "@rarible/logger/build/domain";
import type { BlockchainWallet } from "@rarible/sdk-wallet";
import type { Middleware } from "../middleware/middleware";
import type { ISdkContext } from "../../domain";
import { LogsLevel } from "../../domain";
export declare const loggerConfig: {
    service: string;
    elkUrl: string;
};
export declare function getWalletInfo(wallet: BlockchainWallet): Promise<Record<string, string>>;
export declare function formatDefaultError(err: any): string;
export declare function getErrorMessageString(err: any): string;
export declare function getInternalLoggerMiddleware(logsLevel: LogsLevel, sdkContext: ISdkContext, externalLogger?: AbstractLogger): Middleware;
export declare function getCallableExtraFields(callable: any): Record<string, string | undefined>;
export declare const HUMAN_READABLE_MSG_LIST: Record<string, string>;
