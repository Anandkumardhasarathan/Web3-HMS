import type { BigNumberValue } from "@rarible/utils";
import type { UnionAddress } from "@rarible/types";
import type { RequestCurrency } from "../domain";
import type { IRaribleSdk } from "../../domain";
import type { EVMSuiteSupportedBlockchain } from "../../sdk-blockchains/ethereum/test/suite/domain";
export declare class BalancesTestSuite<T extends EVMSuiteSupportedBlockchain> {
    readonly blockchain: T;
    private readonly sdk;
    private readonly addressUnion;
    constructor(blockchain: T, sdk: IRaribleSdk, addressUnion: UnionAddress);
    waitBalance: (asset: RequestCurrency, value: BigNumberValue, address?: UnionAddress, interval?: number) => Promise<import("bignumber.js").default.Value>;
    convertToWeth: (value: BigNumberValue) => Promise<import("@rarible/sdk-transaction").IBlockchainTransaction<import("@rarible/api-client").Blockchain, undefined>>;
    convertFromWeth: (value: BigNumberValue) => Promise<import("@rarible/sdk-transaction").IBlockchainTransaction<import("@rarible/api-client").Blockchain, undefined>>;
}
