import type { CollectionId, ItemId } from "@rarible/types";
import type { IRaribleSdk } from "../../domain";
import type { MintSimplifiedRequestOffChain, MintSimplifiedRequestOnChain } from "../../types/nft/mint/simplified";
import type { SuiteSupportedBlockchain, TestSuiteProviderDictionary } from "./domain";
export declare class ItemTestSuite<T extends SuiteSupportedBlockchain> {
    private readonly blockchain;
    private readonly sdk;
    private readonly provider;
    constructor(blockchain: T, sdk: IRaribleSdk, provider: TestSuiteProviderDictionary[T]);
    mintAndWait: (collectionId: CollectionId, override?: Partial<MintSimplifiedRequestOnChain>) => Promise<import("../../types/nft/mint/prepare").OnChainMintResponse>;
    waitItem: (itemId: ItemId, supply: number | undefined) => Promise<import("@rarible/api-client").Item>;
    mintLazyAndWait: (collectionId: CollectionId, override?: Partial<MintSimplifiedRequestOffChain>) => Promise<import("../../types/nft/mint/prepare").OffChainMintResponse>;
    private createDefaultMintValues;
}
