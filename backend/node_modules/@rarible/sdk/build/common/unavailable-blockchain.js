"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createUnavailableBlockchain = void 0;
const sdk_common_1 = require("@rarible/sdk-common");
const common_1 = require("../types/common");
function createUnavailableBlockchain(msg) {
    const nonAvailableFn = (0, sdk_common_1.getNotImplementedFn)(msg);
    const nonAvailableAction = (0, sdk_common_1.getNonImplementedAction)(msg);
    return {
        nft: {
            mint: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            burn: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            transfer: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            generateTokenId: nonAvailableFn,
            createCollection: nonAvailableFn,
            preprocessMeta: nonAvailableFn,
            uploadMeta: nonAvailableFn,
        },
        order: {
            fill: { prepare: nonAvailableAction },
            sell: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            sellUpdate: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            buy: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            batchBuy: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            acceptBid: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            bid: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            bidUpdate: new common_1.MethodWithPrepare(nonAvailableFn, nonAvailableAction),
            cancel: nonAvailableFn,
        },
        balances: {
            getBalance: nonAvailableFn,
            convert: nonAvailableFn,
            transfer: nonAvailableFn,
            getBiddingBalance: nonAvailableAction,
            depositBiddingBalance: nonAvailableAction,
            withdrawBiddingBalance: nonAvailableAction,
        },
        restriction: {
            canTransfer: nonAvailableFn,
            getFutureOrderFees: nonAvailableFn,
        },
    };
}
exports.createUnavailableBlockchain = createUnavailableBlockchain;
