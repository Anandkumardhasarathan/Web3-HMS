import type { AssetType, Order, OrderId, UnionContractAddress } from "@rarible/api-client";
import type { ItemId } from "@rarible/api-client";
import type { CollectionId } from "@rarible/api-client";
import type { BlockchainIsh, NonEVMBlockchains, SupportedBlockchain } from "@rarible/sdk-common";
import type { NativeCurrencyAssetType } from "@rarible/api-client/build/models/AssetType";
import { Blockchain } from "@rarible/api-client";
import type { PrepareFillRequest } from "../../types/order/fill/domain";
import type { HasCollection, HasCollectionId } from "../../types/nft/mint/prepare-mint-request.type";
import type { PrepareBidRequest } from "../../types/order/bid/domain";
export declare function getOrderIdFromFillRequest(req?: PrepareFillRequest): OrderId | undefined;
export declare function getNftContractAddress(assetType: AssetType): UnionContractAddress | undefined;
export declare function getOrderNftContractAddress(order: Order): UnionContractAddress | undefined;
export declare function getItemIdData(itemId: ItemId): {
    tokenId: string;
    blockchain: Blockchain;
    collection?: undefined;
    contract?: undefined;
} | {
    collection: CollectionId;
    contract: string;
    tokenId: string;
    blockchain: string;
};
export declare function getCollectionFromItemId(itemId: ItemId): CollectionId | undefined;
export declare function getContractFromMintRequest(request: HasCollection | HasCollectionId): CollectionId;
export declare function getBidEntity(request: PrepareBidRequest): ItemId | CollectionId;
export declare function getOrderId(req: PrepareFillRequest): OrderId;
export type UnionSupportedBlockchain = "EVM" | (typeof NonEVMBlockchains)[number];
export declare function extractUnionSupportedBlockchain(value: BlockchainIsh): UnionSupportedBlockchain;
export declare function convertSupportedBlockchainToUnion(blockchain: SupportedBlockchain): UnionSupportedBlockchain;
export declare function isNativeToken(assetType: AssetType): assetType is NativeCurrencyAssetType;
