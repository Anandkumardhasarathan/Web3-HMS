"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EclipseBalance = void 0;
const tslib_1 = require("tslib");
const utils_1 = require("@rarible/utils");
const get_currency_asset_type_1 = require("../../common/get-currency-asset-type");
class EclipseBalance {
    constructor(sdk, wallet, apis) {
        this.sdk = sdk;
        this.wallet = wallet;
        this.apis = apis;
        this.getBalance = this.getBalance.bind(this);
    }
    getBalance(address, currency) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const assetType = (0, get_currency_asset_type_1.getCurrencyAssetType)(currency);
            if (assetType["@type"] === "CURRENCY_NATIVE" && assetType.blockchain === "ECLIPSE") {
                const response = yield this.apis.balances.getBalance({
                    currencyId: (0, get_currency_asset_type_1.getCurrencyId)(currency),
                    owner: address,
                });
                return (0, utils_1.toBn)(response.decimal);
            }
            else {
                throw new Error("Unsupported asset type");
            }
        });
    }
}
exports.EclipseBalance = EclipseBalance;
