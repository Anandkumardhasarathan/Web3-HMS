import type { RaribleSdk } from "@rarible/protocol-ethereum-sdk";
import type { EthereumNetwork } from "@rarible/protocol-ethereum-sdk/build/types";
import type { Maybe } from "@rarible/types";
import type { EthereumWallet } from "@rarible/sdk-wallet";
import type { PrepareBurnRequest } from "../../types/nft/burn/domain";
import type { BurnSimplifiedRequest } from "../../types/nft/burn/simplified";
import type { BurnResponse } from "../../types/nft/burn/domain";
import type { IApisSdk } from "../../domain";
import type { PrepareBurnResponse } from "../../types/nft/burn/domain";
export declare class EthereumBurn {
    private sdk;
    private wallet;
    private apis;
    private network;
    constructor(sdk: RaribleSdk, wallet: Maybe<EthereumWallet>, apis: IApisSdk, network: EthereumNetwork);
    burn(prepare: PrepareBurnRequest): Promise<PrepareBurnResponse>;
    burnBasic(request: BurnSimplifiedRequest): Promise<BurnResponse>;
}
