import type { RaribleSdk } from "@rarible/protocol-ethereum-sdk";
import type { Address, UnionAddress } from "@rarible/types";
import type { Maybe } from "@rarible/types";
import type { EthereumWallet } from "@rarible/sdk-wallet";
import type { CreateCollectionResponse, EthereumCreateCollectionAsset } from "../../types/nft/deploy/domain";
import type { CreateCollectionRequestSimplified } from "../../types/nft/deploy/simplified";
import type { CreateEthereumCollectionResponse } from "./common";
export declare class EthereumCreateCollection {
    private sdk;
    private wallet;
    constructor(sdk: RaribleSdk, wallet: Maybe<EthereumWallet>);
    convertOperatorsAddresses(operators: UnionAddress[]): Address[];
    private convertResponse;
    startCreateCollection(asset: EthereumCreateCollectionAsset): Promise<CreateEthereumCollectionResponse>;
    createCollectionSimplified(request: CreateCollectionRequestSimplified): Promise<CreateCollectionResponse>;
}
