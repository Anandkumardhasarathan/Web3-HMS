import type { FlowItemId, FlowSdk } from "@rarible/flow-sdk";
import type { OrderId } from "@rarible/api-client";
import type * as OrderCommon from "../../types/order/common";
import type { CurrencyType } from "../../common/domain";
import type { PrepareBidRequest, PrepareBidResponse, PrepareBidUpdateResponse } from "../../types/order/bid/domain";
import type { BidSimplifiedRequest } from "../../types/order/bid/simplified";
import type { BidUpdateSimplifiedRequest } from "../../types/order/bid/simplified";
export declare class FlowBid {
    private sdk;
    static supportedCurrencies: CurrencyType[];
    constructor(sdk: FlowSdk);
    private getConvertableValue;
    getBidObjectData(prepare: PrepareBidRequest): BidObjectData;
    bid(prepare: PrepareBidRequest): Promise<PrepareBidResponse>;
    bidCommon(bidRequest: OrderCommon.OrderRequest, bidObjectData: BidObjectData): Promise<import("@rarible/flow-sdk/build/esm/order/sell").FlowSellResponse>;
    update(prepareRequest: OrderCommon.PrepareOrderUpdateRequest): Promise<PrepareBidUpdateResponse>;
    bidBasic(request: BidSimplifiedRequest): Promise<OrderId>;
    bidUpdateBasic(request: BidUpdateSimplifiedRequest): Promise<OrderId>;
}
type BidObjectData = {
    contract: string;
    tokenId: string;
    itemId: FlowItemId;
};
export {};
