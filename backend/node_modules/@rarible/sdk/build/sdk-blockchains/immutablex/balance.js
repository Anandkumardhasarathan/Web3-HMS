"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImxBalanceService = void 0;
const tslib_1 = require("tslib");
const types_1 = require("@rarible/types");
const get_currency_asset_type_1 = require("../../common/get-currency-asset-type");
const utils_1 = require("./common/utils");
class ImxBalanceService {
    constructor(sdk, apis) {
        this.sdk = sdk;
        this.apis = apis;
        this.getBalance = this.getBalance.bind(this);
    }
    getBalance(address, currency) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const assetType = (0, get_currency_asset_type_1.getCurrencyAssetType)(currency);
            switch (assetType["@type"]) {
                case "ETH":
                    return yield this.sdk.balance.getBalance((0, utils_1.convertToEthereumAddress)(address), { assetClass: "ETH" });
                case "ERC20":
                    const [, contractAddress] = assetType.contract.split(":");
                    return yield this.sdk.balance.getBalance((0, utils_1.convertToEthereumAddress)(address), {
                        assetClass: "ERC20",
                        contract: (0, types_1.toEVMAddress)(contractAddress),
                    });
                default:
                    throw new Error("Unsupported asset type");
            }
        });
    }
}
exports.ImxBalanceService = ImxBalanceService;
