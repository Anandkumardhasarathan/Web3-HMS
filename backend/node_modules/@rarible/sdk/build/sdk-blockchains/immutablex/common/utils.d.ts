import type { EVMAddress, Part } from "@rarible/ethereum-api-client";
import type { CollectionId, Creator, Order } from "@rarible/api-client";
import type { ContractAddress, UnionAddress } from "@rarible/types";
import type { PrepareFillRequest } from "../../../types/order/fill/domain";
import type { IApisSdk } from "../../../domain";
import type { UnionPart } from "../../../types/order/common";
import type { RequestCurrency } from "../../../common/domain";
export declare function getPreparedOrder(request: PrepareFillRequest, apis: IApisSdk): Promise<Order>;
export declare function convertToEthereumAddress(contractAddress: UnionAddress | ContractAddress | CollectionId): EVMAddress;
export declare function unionPartsToParts(parts: UnionPart[] | Creator[] | undefined): Part[];
export declare function getTakeAssetType(currency: RequestCurrency): {
    assetClass: "ERC20";
    contract: EVMAddress;
} | {
    assetClass: "ETH";
    contract?: undefined;
};
export declare function calcBuyerBaseFee(order: Order): number;
