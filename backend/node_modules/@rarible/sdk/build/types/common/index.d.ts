import CallableInstance from "callable-instance";
export type MethodWithPrepareGeneral<S extends (...args: any) => any, P extends (...args: any) => any> = S & MethodWithPrepare<S, P>;
export declare class MethodWithPrepare<SimplifiedMethod extends (...args: any) => any, PrepareMethod extends (...args: any) => any> extends CallableInstance<Parameters<SimplifiedMethod>, ReturnType<SimplifiedMethod>> {
    simplifiedMethod: SimplifiedMethod;
    prepare: PrepareMethod;
    constructor(simplifiedMethod: SimplifiedMethod, prepareFn: PrepareMethod);
    simplified(...args: Parameters<SimplifiedMethod>): ReturnType<SimplifiedMethod>;
}
