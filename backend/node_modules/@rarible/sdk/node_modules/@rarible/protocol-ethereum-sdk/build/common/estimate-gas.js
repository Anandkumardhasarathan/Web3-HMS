"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.estimateGas = void 0;
const tslib_1 = require("tslib");
const types_1 = require("../types");
const logger_1 = require("./logger/logger");
function estimateGas(functionCall, options, logger) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        try {
            return yield functionCall.estimateGas(options);
        }
        catch (err) {
            try {
                const callInfo = yield functionCall.getCallInfo();
                if ((logger === null || logger === void 0 ? void 0 : logger.level) && logger.level >= types_1.LogsLevel.ERROR) {
                    let data = undefined;
                    try {
                        data = yield functionCall.getData();
                    }
                    catch (e) {
                        console.error("Unable to get tx data for log", e);
                    }
                    const logData = {
                        level: "ESTIMATE_GAS_ERRORS",
                        method: `${callInfo.method}.estimateGas`,
                        message: (0, logger_1.getErrorMessageString)(err),
                        from: callInfo.from,
                        provider: callInfo.provider,
                        args: JSON.stringify(callInfo.args),
                        to: callInfo.contract,
                        value: options === null || options === void 0 ? void 0 : options.value,
                        data,
                    };
                    console.error(logData);
                    logger.instance.raw(logData);
                }
            }
            catch (e) {
                console.error("Error while sending logs", e, err);
            }
            throw err;
        }
    });
}
exports.estimateGas = estimateGas;
