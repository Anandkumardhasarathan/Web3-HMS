"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.alephzeroMainnetConfig = void 0;
const types_1 = require("@rarible/types");
const api_client_1 = require("@rarible/api-client");
const id_1 = require("../common/id");
const utils_1 = require("./utils");
exports.alephzeroMainnetConfig = (0, utils_1.extendConfig)({
    basePath: "https://alephzero-api.rarible.org",
    chainId: 41455,
    environment: "production",
    blockchain: api_client_1.Blockchain.ALEPHZERO,
    exchange: {
        v2: (0, types_1.toEVMAddress)("0x5faf16A85028BE138A7178B222DeC98092FEEF97"),
        wrapper: (0, types_1.toEVMAddress)("0xF965237c6b3f89f8C62B45b94097899E3562A830"),
    },
    transferProxies: {
        nft: (0, types_1.toEVMAddress)("0xF65eF65a95821A16E02973b1C2200FA58898e3c0"),
        erc20: (0, types_1.toEVMAddress)("0x248B46BEB66b3078D771a9E7E5a0a0216d0d07ba"),
        erc721Lazy: (0, types_1.toEVMAddress)("0xce4bf732f53A76C463aE8822be858017b02779c8"),
        erc1155Lazy: (0, types_1.toEVMAddress)("0x1CC22424f2B84791cb99c141A68CD2a44Cf35398"),
    },
    openSea: {
        metadata: (0, id_1.id32)("RARIBLE"),
    },
    factories: {
        erc721: (0, types_1.toEVMAddress)("0xC699FB932c1bD7235C7ED19388f26A2428224AED"),
        erc1155: (0, types_1.toEVMAddress)("0xdA12E4Ab1d731F29bF4Bff8f971579D95f8DDD07"),
    },
    weth: (0, types_1.toEVMAddress)("0xb7Da55D7040ef9C887e20374D76A88F93A59119E"),
});
