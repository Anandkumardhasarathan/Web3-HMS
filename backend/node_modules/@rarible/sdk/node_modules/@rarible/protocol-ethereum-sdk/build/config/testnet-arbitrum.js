"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.arbitrumTestnetConfig = void 0;
const types_1 = require("@rarible/types");
const api_client_1 = require("@rarible/api-client");
const id_1 = require("../common/id");
const common_1 = require("./common");
exports.arbitrumTestnetConfig = {
    basePath: "https://testnet-arbitrum-api.rarible.org",
    chainId: 421614,
    environment: "testnet",
    blockchain: api_client_1.Blockchain.ARBITRUM,
    exchange: {
        v1: types_1.EVM_ZERO_ADDRESS,
        v2: (0, types_1.toEVMAddress)("0x47F6d59216aAdb2e5aA6bFAf0b06d790EdC35118"),
        openseaV1: types_1.EVM_ZERO_ADDRESS,
        wrapper: types_1.EVM_ZERO_ADDRESS,
        looksrare: types_1.EVM_ZERO_ADDRESS,
        looksrareV2: types_1.EVM_ZERO_ADDRESS,
        x2y2: types_1.EVM_ZERO_ADDRESS,
    },
    transferProxies: {
        nft: (0, types_1.toEVMAddress)("0x3049455cdA17beE43d61090Ec344624aeda72Ed6"),
        erc20: (0, types_1.toEVMAddress)("0x2FCE8435F0455eDc702199741411dbcD1B7606cA"),
        erc721Lazy: (0, types_1.toEVMAddress)("0x41407B447Fb5425187A9BCA3a062644EF2410F8D"),
        erc1155Lazy: (0, types_1.toEVMAddress)("0x18a2553ef1aaE12d9cd158821319e26A62feE90E"),
        openseaV1: types_1.EVM_ZERO_ADDRESS,
        cryptoPunks: types_1.EVM_ZERO_ADDRESS,
    },
    feeConfigUrl: common_1.FEE_CONFIG_URL,
    openSea: {
        metadata: (0, id_1.id32)("RARIBLE"),
        proxyRegistry: types_1.EVM_ZERO_ADDRESS,
        merkleValidator: types_1.EVM_ZERO_ADDRESS,
    },
    factories: {
        erc721: (0, types_1.toEVMAddress)("0xE3Baf1b17335bbf3AC3C2cFCe95eC1bfC463d0c8"),
        erc1155: (0, types_1.toEVMAddress)("0x51929e5710D9cef0EB0388b7866dF20a4598dF26"),
    },
    cryptoPunks: {
        marketContract: types_1.EVM_ZERO_ADDRESS,
        wrapperContract: types_1.EVM_ZERO_ADDRESS,
    },
    sudoswap: {
        pairFactory: types_1.EVM_ZERO_ADDRESS,
        pairRouter: types_1.EVM_ZERO_ADDRESS,
    },
    weth: (0, types_1.toEVMAddress)("0x980b62da83eff3d4576c647993b0c1d7faf17c73"),
    auction: types_1.EVM_ZERO_ADDRESS,
    looksrareOrderValidatorV2: types_1.EVM_ZERO_ADDRESS,
};
