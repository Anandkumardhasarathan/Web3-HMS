"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.testnetEthereumConfig = void 0;
const types_1 = require("@rarible/types");
const api_client_1 = require("@rarible/api-client");
const id_1 = require("../common/id");
const common_1 = require("./common");
exports.testnetEthereumConfig = {
    basePath: "https://testnet-ethereum-api.rarible.org",
    chainId: 11155111,
    environment: "testnet",
    blockchain: api_client_1.Blockchain.ETHEREUM,
    exchange: {
        v1: types_1.EVM_ZERO_ADDRESS,
        v2: (0, types_1.toEVMAddress)("0x3e52D660b69d1bDacb6C513cE085D924F5Cb9c77"),
        openseaV1: types_1.EVM_ZERO_ADDRESS,
        wrapper: (0, types_1.toEVMAddress)("0x1554aDA53194B961016931A2E86C80D09a816209"),
        looksrare: types_1.EVM_ZERO_ADDRESS,
        looksrareV2: (0, types_1.toEVMAddress)("0x34098cc15a8a48Da9d3f31CC0F63F01f9aa3D9F3"),
        x2y2: types_1.EVM_ZERO_ADDRESS,
    },
    transferProxies: {
        nft: (0, types_1.toEVMAddress)("0xA094E566b61b3c2D88ACf7Cc15e3Dd0FA83F32af"),
        erc20: (0, types_1.toEVMAddress)("0xB8863180CAC2d0Ab665e5968C0De25298A1D8CEe"),
        erc721Lazy: (0, types_1.toEVMAddress)("0xa2eEBb837aEF89369Ad117568d75348e6174520e"),
        erc1155Lazy: (0, types_1.toEVMAddress)("0xC5BBd75789bD007784A0046094d19aCeA1A79eB1"),
        openseaV1: types_1.EVM_ZERO_ADDRESS,
        cryptoPunks: types_1.EVM_ZERO_ADDRESS,
    },
    feeConfigUrl: common_1.FEE_CONFIG_URL,
    openSea: {
        metadata: (0, id_1.id32)("RARIBLE"),
        proxyRegistry: types_1.EVM_ZERO_ADDRESS,
        merkleValidator: types_1.EVM_ZERO_ADDRESS,
    },
    factories: {
        erc721: (0, types_1.toEVMAddress)("0xB020bA7fcF43DCc59eF0103624BD6FADE66d105E"),
        erc1155: (0, types_1.toEVMAddress)("0x166F6180170f438Ddc38050a2B708d38c0890956"),
    },
    cryptoPunks: {
        marketContract: types_1.EVM_ZERO_ADDRESS,
        wrapperContract: types_1.EVM_ZERO_ADDRESS,
    },
    sudoswap: {
        pairFactory: (0, types_1.toEVMAddress)("0xd96B8cd321176D95C77B2Ba6bfC007659c6CdceB"),
        pairRouter: (0, types_1.toEVMAddress)("0x72d0Ee6B28553b048442a9c8DAD6eA33806e9357"),
    },
    weth: (0, types_1.toEVMAddress)("0xfff9976782d46cc05630d1f6ebab18b2324d6b14"),
    auction: types_1.EVM_ZERO_ADDRESS,
    looksrareOrderValidatorV2: (0, types_1.toEVMAddress)("0x0bc129E4c1f8D7b5583eAbAeb1F7468935B6ec0C"),
};
