"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getErc1155Contract = void 0;
const tslib_1 = require("tslib");
const domain_1 = require("../domain");
function getErc1155Contract(ethereum, version, address) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        switch (version) {
            case domain_1.ERC1155VersionEnum.ERC1155V2: {
                const { erc1155v2Abi } = yield Promise.resolve().then(() => tslib_1.__importStar(require("./v2")));
                return ethereum.createContract(erc1155v2Abi, address);
            }
            case domain_1.ERC1155VersionEnum.ERC1155V1: {
                const { erc1155v1Abi } = yield Promise.resolve().then(() => tslib_1.__importStar(require("./v1")));
                return ethereum.createContract(erc1155v1Abi, address);
            }
            default:
                throw new Error("Unsupported ERC1155 version");
        }
    });
}
exports.getErc1155Contract = getErc1155Contract;
