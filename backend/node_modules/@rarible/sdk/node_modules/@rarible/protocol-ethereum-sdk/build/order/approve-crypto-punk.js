"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.approveCryptoPunk = void 0;
const tslib_1 = require("tslib");
const cryptoPunks_1 = require("../nft/contracts/cryptoPunks");
function approveCryptoPunk(ethereum, send, contractAddress, owner, operator, punkIndex) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        if (!ethereum) {
            throw new Error("Wallet undefined");
        }
        const marketContract = (0, cryptoPunks_1.createCryptoPunksMarketContract)(ethereum, contractAddress);
        const offer = yield marketContract.functionCall("punksOfferedForSale", punkIndex).call();
        if (offer.isForSale &&
            offer.onlySellTo.toLowerCase() === operator.toLowerCase() &&
            offer.minValue.toString() === "0") {
            return undefined;
        }
        else {
            return send(marketContract.functionCall("offerPunkForSaleToAddress", punkIndex, 0, operator));
        }
    });
}
exports.approveCryptoPunk = approveCryptoPunk;
