"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeRaribleV2OrderData = exports.encodePartToBuffer = void 0;
const types_1 = require("@rarible/types");
const ZERO_WORD = (0, types_1.toWord)("0x0000000000000000000000000000000000000000000000000000000000000000");
/**
 * Function encoded Part struct to single uint256
 * @param part
 */
function encodePartToBuffer(part) {
    if (!part) {
        return (0, types_1.toBigNumber)(ZERO_WORD);
    }
    const value = part.value.toString(16);
    let account = part.account;
    if (account.startsWith("0x")) {
        account = account.substring(2);
    }
    return (0, types_1.toBigNumber)("0x" + value.padStart(12, "0") + account);
}
exports.encodePartToBuffer = encodePartToBuffer;
function encodeRaribleV2OrderData(ethereum, data, wrongEncode = false) {
    switch (data.dataType) {
        case "RARIBLE_V2_DATA_V3": {
            const encoded = ethereum.encodeParameter(DATA_V3_TYPE, {
                payouts: data.payouts,
                originFees: data.originFees,
                isMakeFill: data.isMakeFill,
            });
            return ["0x4ade54ca", encoded];
        }
        case "RARIBLE_V2_DATA_V2": {
            const encoded = ethereum.encodeParameter(DATA_V2_TYPE, {
                payouts: data.payouts,
                originFees: data.originFees,
                isMakeFill: data.isMakeFill,
            });
            return ["0x23d235ef", encoded];
        }
        case "RARIBLE_V2_DATA_V1": {
            const encoded = ethereum.encodeParameter(DATA_V1_TYPE, {
                payouts: data.payouts,
                originFees: data.originFees,
            });
            if (wrongEncode) {
                return ["0x4c234266", `0x${encoded.substring(66)}`];
            }
            return ["0x4c234266", encoded];
        }
        default: {
            throw new Error(`Data type not supported: ${data.dataType}`);
        }
    }
}
exports.encodeRaribleV2OrderData = encodeRaribleV2OrderData;
const DATA_V1_TYPE = {
    components: [
        {
            components: [
                {
                    name: "account",
                    type: "address",
                },
                {
                    name: "value",
                    type: "uint96",
                },
            ],
            name: "payouts",
            type: "tuple[]",
        },
        {
            components: [
                {
                    name: "account",
                    type: "address",
                },
                {
                    name: "value",
                    type: "uint96",
                },
            ],
            name: "originFees",
            type: "tuple[]",
        },
    ],
    name: "data",
    type: "tuple",
};
const DATA_V2_TYPE = {
    components: [
        {
            components: [
                {
                    name: "account",
                    type: "address",
                },
                {
                    name: "value",
                    type: "uint96",
                },
            ],
            name: "payouts",
            type: "tuple[]",
        },
        {
            components: [
                {
                    name: "account",
                    type: "address",
                },
                {
                    name: "value",
                    type: "uint96",
                },
            ],
            name: "originFees",
            type: "tuple[]",
        },
        {
            name: "isMakeFill",
            type: "bool",
        },
    ],
    name: "data",
    type: "tuple",
};
const DATA_V3_TYPE = {
    components: [
        {
            components: [
                {
                    name: "account",
                    type: "address",
                },
                {
                    name: "value",
                    type: "uint96",
                },
            ],
            name: "payouts",
            type: "tuple[]",
        },
        {
            components: [
                {
                    name: "account",
                    type: "address",
                },
                {
                    name: "value",
                    type: "uint96",
                },
            ],
            name: "originFees",
            type: "tuple[]",
        },
        {
            name: "isMakeFill",
            type: "bool",
        },
    ],
    name: "data",
    type: "tuple",
};
