import type { EVMAddress, Part } from "@rarible/ethereum-api-client";
import type { BigNumber } from "@rarible/types";
/**
 * Class used to reduce multiple originFee Part records (from different fill requests) to 2 values.
 */
export declare class OriginFeeReducer {
    private readonly addresses;
    constructor();
    /**
     * Reduce fees to converted single uint fee value
     * @param originFees
     */
    reduce(originFees: Part[] | undefined): BigNumber;
    getReducedFeesArray(originFees: Part[] | undefined): [number, number];
    getComplexReducedFeesData(originFees: Part[] | undefined): ComplexFeesReducedData;
    /**
     * Return addresses for fees
     */
    getAddresses(): [EVMAddress, EVMAddress];
    private reducePart;
}
export type ComplexFeesReducedData = {
    encodedFeesValue: BigNumber;
    totalFeeBasisPoints: number;
};
