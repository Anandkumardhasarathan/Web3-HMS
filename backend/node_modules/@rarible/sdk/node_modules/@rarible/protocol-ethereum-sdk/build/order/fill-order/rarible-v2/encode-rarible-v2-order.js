"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeRaribleV2OrderPurchaseStruct = void 0;
const types_1 = require("@rarible/types");
const encode_rarible_v2_order_data_1 = require("../../encode-rarible-v2-order-data");
const asset_type_to_struct_1 = require("../../asset-type-to-struct");
/**
 * Encode RaribleV2 orders into Purchase struct for directBuy/batchPurchase
 * @param ethereum
 * @param sellOrder
 * @param sellOrderSignature
 * @param buyOrder
 * @param withMethodId add directPurchase method signature prefix
 */
function encodeRaribleV2OrderPurchaseStruct(ethereum, sellOrder, sellOrderSignature, buyOrder, withMethodId) {
    var _a, _b;
    const nftStruct = (0, asset_type_to_struct_1.assetTypeToStruct)(ethereum, sellOrder.make.assetType);
    const [sellOrderDataType, sellOrderData] = (0, encode_rarible_v2_order_data_1.encodeRaribleV2OrderData)(ethereum, sellOrder.data);
    const [, buyOrderData] = (0, encode_rarible_v2_order_data_1.encodeRaribleV2OrderData)(ethereum, buyOrder.data);
    const encodedStruct = ethereum.encodeParameter(PURCHASE_STRUCT, {
        sellOrderMaker: sellOrder.maker,
        sellOrderNftAmount: sellOrder.make.value,
        nftAssetClass: nftStruct.assetClass,
        nftData: nftStruct.data,
        sellOrderPaymentAmount: sellOrder.take.value,
        paymentToken: sellOrder.take.assetType.assetClass === "ETH" ? types_1.EVM_ZERO_ADDRESS : sellOrder.take.assetType.contract,
        sellOrderSalt: sellOrder.salt,
        sellOrderStart: (_a = sellOrder.start) !== null && _a !== void 0 ? _a : 0,
        sellOrderEnd: (_b = sellOrder.end) !== null && _b !== void 0 ? _b : 0,
        sellOrderDataType: sellOrderDataType,
        sellOrderData: sellOrderData,
        sellOrderSignature: sellOrderSignature,
        buyOrderPaymentAmount: buyOrder.make.value,
        buyOrderNftAmount: buyOrder.take.value,
        buyOrderData: buyOrderData,
    });
    return withMethodId ? "0x0d5f7d35" + encodedStruct.slice(2) : encodedStruct;
}
exports.encodeRaribleV2OrderPurchaseStruct = encodeRaribleV2OrderPurchaseStruct;
const SELL_ORDER_FIELDS = [
    {
        name: "sellOrderMaker",
        type: "address",
    },
    {
        name: "sellOrderNftAmount",
        type: "uint256",
    },
    {
        name: "nftAssetClass",
        type: "bytes4",
    },
    {
        name: "nftData",
        type: "bytes",
    },
    {
        name: "sellOrderPaymentAmount",
        type: "uint256",
    },
    {
        name: "paymentToken",
        type: "address",
    },
    {
        name: "sellOrderSalt",
        type: "uint256",
    },
    {
        name: "sellOrderStart",
        type: "uint",
    },
    {
        name: "sellOrderEnd",
        type: "uint",
    },
    {
        name: "sellOrderDataType",
        type: "bytes4",
    },
    {
        name: "sellOrderData",
        type: "bytes",
    },
    {
        name: "sellOrderSignature",
        type: "bytes",
    },
];
const BUY_ORDER_FIELDS = [
    {
        name: "buyOrderPaymentAmount",
        type: "uint256",
    },
    {
        name: "buyOrderNftAmount",
        type: "uint256",
    },
    {
        name: "buyOrderData",
        type: "bytes",
    },
];
const PURCHASE_STRUCT = {
    components: [...SELL_ORDER_FIELDS, ...BUY_ORDER_FIELDS],
    name: "data",
    type: "tuple",
};
