"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.balanceOf = void 0;
const tslib_1 = require("tslib");
const types_1 = require("@rarible/types");
const utils_1 = require("@rarible/utils");
const erc20_1 = require("../../contracts/erc20");
const erc721_1 = require("../../contracts/erc721");
const erc1155_1 = require("../../contracts/erc1155");
const item_1 = require("./item");
const constants_1 = require("./constants");
const balanceOf = (ethereum, owner, item, criteria) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    if ((0, item_1.isErc721Item)(item.itemType)) {
        const erc721 = (0, erc721_1.createErc721Contract)(ethereum, (0, types_1.toEVMAddress)(item.token));
        if (item.itemType === constants_1.ItemType.ERC721_WITH_CRITERIA) {
            if (criteria) {
                const ownerOf = yield erc721.functionCall("ownerOf", criteria.identifier).call();
                return (0, utils_1.toBn)(Number(ownerOf.toLowerCase() === owner.toLowerCase()));
            }
            return (0, utils_1.toBn)(yield erc721.functionCall("balanceOf", owner).call());
        }
        const ownerOf = yield erc721.functionCall("ownerOf", item.identifierOrCriteria).call();
        return (0, utils_1.toBn)(Number(ownerOf.toLowerCase() === owner.toLowerCase()));
    }
    else if ((0, item_1.isErc1155Item)(item.itemType)) {
        const erc1155 = (0, erc1155_1.createErc1155Contract)(ethereum, (0, types_1.toEVMAddress)(item.token));
        if (item.itemType === constants_1.ItemType.ERC1155_WITH_CRITERIA) {
            if (!criteria) {
                const startAmount = (0, utils_1.toBn)(item.startAmount);
                const endAmount = (0, utils_1.toBn)(item.endAmount);
                return startAmount.gt(endAmount) ? startAmount : endAmount;
            }
            return (0, utils_1.toBn)(yield erc1155.functionCall("balanceOf", owner, criteria.identifier).call());
        }
        return (0, utils_1.toBn)(yield erc1155.functionCall("balanceOf", owner, item.identifierOrCriteria).call());
    }
    if ((0, item_1.isErc20Item)(item.itemType)) {
        const erc20 = (0, erc20_1.createErc20Contract)(ethereum, (0, types_1.toEVMAddress)(item.token));
        return (0, utils_1.toBn)(yield erc20.functionCall("balanceOf", owner).call());
    }
    return (0, utils_1.toBn)(yield ethereum.getBalance((0, types_1.toEVMAddress)(owner)));
});
exports.balanceOf = balanceOf;
