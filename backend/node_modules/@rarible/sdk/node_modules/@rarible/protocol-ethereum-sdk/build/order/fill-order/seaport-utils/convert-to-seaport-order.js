"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertAPIOrderToSeaport = void 0;
const seaport_1 = require("../seaport");
function convertAPIOrderToSeaport(order) {
    if (!order.signature) {
        throw new Error("Signature should exists");
    }
    if (order.start === undefined || order.end === undefined) {
        throw new Error("Order should includes start/end fields");
    }
    if (order.data.nonce === undefined) {
        throw new Error("Converting Seaport order error: nonce is undefined");
    }
    return {
        parameters: {
            counter: order.data.nonce,
            offerer: order.maker,
            zone: order.data.zone,
            orderType: (0, seaport_1.convertOrderType)(order.data.orderType),
            startTime: order.start.toString(),
            endTime: order.end.toString(),
            zoneHash: order.data.zoneHash,
            salt: order.salt,
            offer: order.data.offer.map(offerItem => ({
                itemType: (0, seaport_1.convertItemType)(offerItem.itemType),
                token: offerItem.token,
                identifierOrCriteria: offerItem.identifierOrCriteria,
                startAmount: offerItem.startAmount,
                endAmount: offerItem.endAmount,
            })),
            consideration: order.data.consideration.map(item => ({
                itemType: (0, seaport_1.convertItemType)(item.itemType),
                token: item.token,
                identifierOrCriteria: item.identifierOrCriteria,
                startAmount: item.startAmount,
                endAmount: item.endAmount,
                recipient: item.recipient,
            })),
            totalOriginalConsiderationItems: order.data.consideration.length,
            conduitKey: order.data.conduitKey,
        },
        signature: order.signature,
    };
}
exports.convertAPIOrderToSeaport = convertAPIOrderToSeaport;
