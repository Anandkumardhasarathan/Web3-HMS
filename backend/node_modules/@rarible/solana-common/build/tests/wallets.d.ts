export declare const solanaKeyKinds: readonly ["privateKey", "arrayPrivateKey"];
export type SolanaWalletKeyKind = (typeof solanaKeyKinds)[number];
export type SolanaWalletKeyData<T extends SolanaWalletKeyKind> = {
    privateKey: string;
    arrayPrivateKey: Uint8Array;
}[T];
export declare const solanaTestWords: readonly ["test"];
export type SolanaTestWord = (typeof solanaTestWords)[number];
export type SolanaWalletMock = {
    publicKeyString: string;
    signatures: {
        [K in SolanaTestWord]: {
            array: Uint8Array;
            hexString: string;
        };
    };
    keys: {
        [K in SolanaWalletKeyKind]: SolanaWalletKeyData<K>;
    };
};
export declare const solanaWalletMocks: {
    readonly 0: SolanaWalletMock;
};
export declare function getSolanaMockWallet<T extends keyof typeof solanaWalletMocks>(index: T): (typeof solanaWalletMocks)[T];
