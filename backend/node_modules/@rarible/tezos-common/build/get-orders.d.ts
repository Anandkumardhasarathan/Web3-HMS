import { OrderType } from "./base";
import { Config } from "./types";
export interface ProtocolOrderPayload {
    continuation: string;
    orders: any[];
}
export interface ProtocolActivityPayload {
    continuation: string;
    cursor: string;
    activities: any[];
}
export declare enum ProtocolActivity {
    LIST = "LIST",
    BID = "BID"
}
export declare function get_active_order_type(config: Config, maker: string, item_id: string): Promise<OrderType | undefined>;
export declare function await_order(config: Config, item_id: string, op_hash: string, type: ProtocolActivity, maker: string, max_tries: number, sleep: number): Promise<string | undefined>;
export declare function get_orders(config: Config, maker: string, is_active: boolean, item_id: string, size?: number, continuation?: string): Promise<ProtocolOrderPayload>;
export declare function get_orders_by_ids(config: Config, ids: string[]): Promise<ProtocolOrderPayload>;
export declare function get_item_activities(config: Config, item_id: string, type: ProtocolActivity, size?: number, cursor?: string): Promise<ProtocolActivityPayload>;
