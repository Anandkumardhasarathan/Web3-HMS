"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.get_item_activities = exports.get_orders_by_ids = exports.get_orders = exports.await_order = exports.get_active_order_type = exports.ProtocolActivity = void 0;
var base_1 = require("./base");
var fetch_wrapper_1 = require("./fetch-wrapper");
var ProtocolActivity;
(function (ProtocolActivity) {
    ProtocolActivity["LIST"] = "LIST";
    ProtocolActivity["BID"] = "BID";
})(ProtocolActivity = exports.ProtocolActivity || (exports.ProtocolActivity = {}));
function get_active_order_type(config, maker, item_id) {
    return __awaiter(this, void 0, void 0, function () {
        var _this = this;
        return __generator(this, function (_a) {
            return [2 /*return*/, (0, base_1.retry)(30, 2000, function () { return __awaiter(_this, void 0, void 0, function () {
                    var order_result, continuation, i;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, get_orders(config, maker, true, item_id)];
                            case 1:
                                order_result = _a.sent();
                                continuation = "";
                                while (continuation != undefined) {
                                    if (order_result.orders.length > 0) {
                                        for (i = 0; i < order_result.orders.length; i++) {
                                            if (order_result.orders[i].data["@type"] == "TEZOS_RARIBLE_V2") {
                                                return [2 /*return*/, base_1.OrderType.V1];
                                            }
                                            else if (order_result.orders[i].data["@type"] == "TEZOS_RARIBLE_V3") {
                                                return [2 /*return*/, base_1.OrderType.V2];
                                            }
                                            else {
                                                throw new Error("Unrecognized order type: v1/v2 orders has not been found");
                                            }
                                        }
                                        continuation = order_result.continuation;
                                    }
                                    else {
                                        throw new Error("Unrecognized order type: v1/v2 orders has not been found");
                                    }
                                }
                                return [2 /*return*/];
                        }
                    });
                }); })];
        });
    });
}
exports.get_active_order_type = get_active_order_type;
function await_order(config, item_id, op_hash, type, maker, max_tries, sleep) {
    return __awaiter(this, void 0, void 0, function () {
        var _this = this;
        return __generator(this, function (_a) {
            return [2 /*return*/, (0, base_1.retry)(max_tries, sleep, function () { return __awaiter(_this, void 0, void 0, function () {
                    var cursor, activities, _a, _b, activity;
                    var e_1, _c;
                    return __generator(this, function (_d) {
                        switch (_d.label) {
                            case 0:
                                cursor = "";
                                _d.label = 1;
                            case 1:
                                if (!(cursor != undefined)) return [3 /*break*/, 4];
                                return [4 /*yield*/, get_item_activities(config, item_id, type, 1000, cursor)];
                            case 2:
                                activities = _d.sent();
                                if (!activities.activities.length) {
                                    throw new Error("await_order: Order has not been found");
                                }
                                try {
                                    for (_a = (e_1 = void 0, __values(activities.activities)), _b = _a.next(); !_b.done; _b = _a.next()) {
                                        activity = _b.value;
                                        if (activity["@type"] === type.valueOf()) {
                                            if (activity["maker"] === "TEZOS:".concat(maker) &&
                                                activity["hash"] === op_hash) {
                                                return [2 /*return*/, activity["orderId"]];
                                            }
                                        }
                                    }
                                }
                                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                                finally {
                                    try {
                                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                                    }
                                    finally { if (e_1) throw e_1.error; }
                                }
                                cursor = activities["cursor"];
                                return [4 /*yield*/, (0, base_1.delay)(sleep)];
                            case 3:
                                _d.sent();
                                return [3 /*break*/, 1];
                            case 4: return [2 /*return*/];
                        }
                    });
                }); })];
        });
    });
}
exports.await_order = await_order;
function get_orders(config, maker, is_active, item_id, size, continuation) {
    if (size === void 0) { size = 1000; }
    return __awaiter(this, void 0, void 0, function () {
        var continuation_filter, active_filter, r;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    continuation_filter = continuation ? "&continuation=".concat(continuation) : "";
                    active_filter = is_active ? "&status=ACTIVE" : "";
                    return [4 /*yield*/, (0, fetch_wrapper_1.fetchAPI)("/orders/sell/byItem?itemId=TEZOS:".concat(item_id, "&maker=TEZOS:").concat(maker, "&size=").concat(size).concat(active_filter).concat(continuation_filter), { config: config })];
                case 1:
                    r = _a.sent();
                    return [4 /*yield*/, r.json()];
                case 2: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.get_orders = get_orders;
function get_orders_by_ids(config, ids) {
    return __awaiter(this, void 0, void 0, function () {
        var r, res;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, (0, fetch_wrapper_1.fetchAPI)("/orders/byIds", {
                        config: config,
                        method: 'POST',
                        body: JSON.stringify({ ids: ids }),
                        headers: { 'Content-Type': 'application/json' }
                    })];
                case 1:
                    r = _a.sent();
                    return [4 /*yield*/, r.json()];
                case 2:
                    res = _a.sent();
                    return [2 /*return*/, res];
            }
        });
    });
}
exports.get_orders_by_ids = get_orders_by_ids;
function get_item_activities(config, item_id, type, size, cursor) {
    if (size === void 0) { size = 1000; }
    return __awaiter(this, void 0, void 0, function () {
        var cursor_filter, r, res;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    cursor_filter = cursor ? "&cursor=".concat(cursor) : "";
                    return [4 /*yield*/, (0, fetch_wrapper_1.fetchAPI)("/activities/byItem?itemId=TEZOS:".concat(item_id, "&type=").concat(type, "&size=").concat(size).concat(cursor_filter), { config: config })];
                case 1:
                    r = _a.sent();
                    return [4 /*yield*/, r.json()];
                case 2:
                    res = _a.sent();
                    return [2 /*return*/, res];
            }
        });
    });
}
exports.get_item_activities = get_item_activities;
