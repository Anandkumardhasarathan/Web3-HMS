"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cart_purchase = void 0;
var tezos_common_1 = require("@rarible/tezos-common");
var bignumber_js_1 = require("bignumber.js");
var order_1 = require("../../order");
var buy_1 = require("../../sales/buy");
var fulfill_ask_1 = require("../objkt/v2/fulfill_ask");
var fulfill_ask_2 = require("../objkt/v1/fulfill_ask");
var hen_collect_1 = require("../hen/hen_collect");
var teia_collect_1 = require("../teia/teia_collect");
var versum_collect_1 = require("../versum/versum_collect");
var fxhash_v1_collect_1 = require("../fxhash/v1/fxhash_v1_collect");
var fxhash_v2_listing_accept_1 = require("../fxhash/v2/fxhash_v2_listing_accept");
function cart_purchase(provider, orders) {
    return __awaiter(this, void 0, void 0, function () {
        var order_ids, orders_data, order_map, _a, _b, order_data, transactions, orders_1, orders_1_1, cart_order, order, _c, order_form, rarible_legacy_txs, asset_type, take_token_id, buyRequest, rarible_v2_txs, objkt_v1_txs, objkt_v2_txs, hen_txs, teia_txs, versum_txs, fxhash_v1_txs, fxhash_v2_txs, e_1_1, op;
        var e_2, _d, e_1, _e;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    order_ids = orders.map(function (order) {
                        return order.order_id;
                    });
                    return [4 /*yield*/, (0, tezos_common_1.get_orders_by_ids)(provider.config, order_ids)];
                case 1:
                    orders_data = _f.sent();
                    order_map = new Map();
                    try {
                        for (_a = __values(orders_data.orders), _b = _a.next(); !_b.done; _b = _a.next()) {
                            order_data = _b.value;
                            order_map.set(order_data.id, order_data);
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    transactions = [];
                    _f.label = 2;
                case 2:
                    _f.trys.push([2, 24, 25, 26]);
                    orders_1 = __values(orders), orders_1_1 = orders_1.next();
                    _f.label = 3;
                case 3:
                    if (!!orders_1_1.done) return [3 /*break*/, 23];
                    cart_order = orders_1_1.value;
                    order = order_map.get(cart_order.order_id);
                    _c = order.data["@type"];
                    switch (_c) {
                        case "TEZOS_RARIBLE_V2": return [3 /*break*/, 4];
                        case "TEZOS_RARIBLE_V3": return [3 /*break*/, 6];
                        case "TEZOS_OBJKT_V1": return [3 /*break*/, 8];
                        case "TEZOS_OBJKT_V2": return [3 /*break*/, 10];
                        case "TEZOS_HEN": return [3 /*break*/, 12];
                        case "TEZOS_TEIA_V1": return [3 /*break*/, 14];
                        case "TEZOS_VERSUM_V1": return [3 /*break*/, 16];
                        case "TEZOS_FXHASH_V1": return [3 /*break*/, 18];
                        case "TEZOS_FXHASH_V2": return [3 /*break*/, 20];
                    }
                    return [3 /*break*/, 22];
                case 4:
                    order_form = (0, order_1.order_of_json)(JSON.parse(order.data.legacyData));
                    return [4 /*yield*/, (0, order_1.get_rarible_legacy_buy_transaction)(provider, order_form, {
                            amount: new bignumber_js_1.default(order_form.make.value)
                        })];
                case 5:
                    rarible_legacy_txs = _f.sent();
                    transactions = transactions.concat(rarible_legacy_txs);
                    return [3 /*break*/, 22];
                case 6:
                    asset_type = tezos_common_1.AssetTypeV2.XTZ;
                    switch (order.take.type["@type"]) {
                        case "XTZ":
                            break;
                        case "TEZOS_FT":
                            if (order.take.type.contract != undefined && order.take.type.tokenId != undefined) {
                                asset_type = tezos_common_1.AssetTypeV2.FA2;
                            }
                            else {
                                asset_type = tezos_common_1.AssetTypeV2.FA12;
                            }
                    }
                    take_token_id = undefined;
                    if (order.take.type.tokenId != undefined) {
                        take_token_id = new bignumber_js_1.default(order.take.type.tokenId);
                    }
                    else {
                        take_token_id = undefined;
                    }
                    buyRequest = {
                        asset_contract: order.make.type.contract.split("TEZOS:")[1],
                        asset_token_id: new bignumber_js_1.default(order.make.type.tokenId),
                        asset_seller: order.maker.split("TEZOS:")[1],
                        sale_type: asset_type,
                        sale_asset_contract: order.take.type.contract === undefined ? undefined : order.take.type.contract.split("TEZOS:")[1],
                        sale_asset_token_id: take_token_id,
                        sale_amount: new bignumber_js_1.default(order.take.value),
                        sale_qty: new bignumber_js_1.default(cart_order.amount),
                        sale_payouts: cart_order.payouts,
                        sale_origin_fees: cart_order.origin_fees,
                        use_all: false,
                    };
                    return [4 /*yield*/, (0, buy_1.get_rarible_v2_buy_transaction)(provider, buyRequest)];
                case 7:
                    rarible_v2_txs = _f.sent();
                    transactions = transactions.concat(rarible_v2_txs);
                    return [3 /*break*/, 22];
                case 8: return [4 /*yield*/, (0, fulfill_ask_2.get_objkt_fulfill_ask_v1_transaction)(provider, order.data.internalOrderId, new bignumber_js_1.default(order.makePrice))];
                case 9:
                    objkt_v1_txs = _f.sent();
                    transactions = transactions.concat(objkt_v1_txs);
                    return [3 /*break*/, 22];
                case 10: return [4 /*yield*/, (0, fulfill_ask_1.get_objkt_fulfill_ask_v2_transaction)(provider, order.data.internalOrderId, new bignumber_js_1.default(order.makePrice))];
                case 11:
                    objkt_v2_txs = _f.sent();
                    transactions = transactions.concat(objkt_v2_txs);
                    return [3 /*break*/, 22];
                case 12: return [4 /*yield*/, (0, hen_collect_1.get_hen_collect_transaction)(provider, order.data.internalOrderId, new bignumber_js_1.default(order.makePrice))];
                case 13:
                    hen_txs = _f.sent();
                    transactions = transactions.concat(hen_txs);
                    return [3 /*break*/, 22];
                case 14: return [4 /*yield*/, (0, teia_collect_1.get_teia_collect_transaction)(provider, order.data.internalOrderId, new bignumber_js_1.default(order.makePrice))];
                case 15:
                    teia_txs = _f.sent();
                    transactions = transactions.concat(teia_txs);
                    return [3 /*break*/, 22];
                case 16: return [4 /*yield*/, (0, versum_collect_1.get_versum_collect_transaction)(provider, order.data.internalOrderId, new bignumber_js_1.default(order.makePrice), cart_order.amount)];
                case 17:
                    versum_txs = _f.sent();
                    transactions = transactions.concat(versum_txs);
                    return [3 /*break*/, 22];
                case 18: return [4 /*yield*/, (0, fxhash_v1_collect_1.get_fxhash_v1_collect_transaction)(provider, order.data.internalOrderId, new bignumber_js_1.default(order.makePrice))];
                case 19:
                    fxhash_v1_txs = _f.sent();
                    transactions = transactions.concat(fxhash_v1_txs);
                    return [3 /*break*/, 22];
                case 20: return [4 /*yield*/, (0, fxhash_v2_listing_accept_1.get_fxhash_v2_listing_accept_transaction)(provider, order.data.internalOrderId, new bignumber_js_1.default(order.makePrice))];
                case 21:
                    fxhash_v2_txs = _f.sent();
                    transactions = transactions.concat(fxhash_v2_txs);
                    return [3 /*break*/, 22];
                case 22:
                    orders_1_1 = orders_1.next();
                    return [3 /*break*/, 3];
                case 23: return [3 /*break*/, 26];
                case 24:
                    e_1_1 = _f.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 26];
                case 25:
                    try {
                        if (orders_1_1 && !orders_1_1.done && (_e = orders_1.return)) _e.call(orders_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 26: return [4 /*yield*/, (0, tezos_common_1.send_batch)(provider, transactions)];
                case 27:
                    op = _f.sent();
                    return [2 /*return*/, op];
            }
        });
    });
}
exports.cart_purchase = cart_purchase;
