"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.hen_swap = exports.hen_swap_arg = void 0;
var tezos_common_1 = require("@rarible/tezos-common");
var bignumber_js_1 = require("bignumber.js");
var tezos_common_2 = require("@rarible/tezos-common");
function hen_swap_arg(provider, swap, creator, royalties) {
    var parameter = {
        args: [{
                args: [{
                        string: creator
                    },
                    {
                        int: "".concat(swap.editions)
                    }
                ],
                prim: "Pair"
            },
            {
                args: [{
                        int: "".concat(swap.token_id)
                    },
                    {
                        args: [{
                                int: "".concat(royalties)
                            },
                            {
                                int: "".concat(swap.price_per_item)
                            }
                        ],
                        prim: "Pair"
                    }
                ],
                prim: "Pair"
            }
        ],
        prim: "Pair"
    };
    return { destination: provider.config.hen_marketplace, entrypoint: "swap", parameter: parameter };
}
exports.hen_swap_arg = hen_swap_arg;
function hen_swap(provider, order) {
    return __awaiter(this, void 0, void 0, function () {
        var args, seller, approve_a, royalties, op, order_id, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    args = [];
                    return [4 /*yield*/, (0, tezos_common_2.get_address)(provider)];
                case 1:
                    seller = _a.sent();
                    return [4 /*yield*/, (0, tezos_common_1.approve_v2)(provider, seller, tezos_common_1.AssetTypeV2.FA2, provider.config.hen_marketplace, provider.config.hen_objkts, order.token_id)];
                case 2:
                    approve_a = _a.sent();
                    if (approve_a)
                        args = args.concat(approve_a);
                    return [4 /*yield*/, (0, tezos_common_1.get_royalties)(provider, provider.config.hen_objkts, order.token_id)];
                case 3:
                    royalties = _a.sent();
                    args = args.concat(hen_swap_arg(provider, order, royalties[0].account, new bignumber_js_1.default(royalties[0].value).div(10)));
                    if (args.length === 0) {
                        throw new Error("Empty array of sell args");
                    }
                    _a.label = 4;
                case 4:
                    _a.trys.push([4, 8, , 9]);
                    return [4 /*yield*/, (0, tezos_common_1.send_batch)(provider, args)];
                case 5:
                    op = _a.sent();
                    return [4 /*yield*/, op.confirmation()];
                case 6:
                    _a.sent();
                    console.log(op.hash);
                    return [4 /*yield*/, (0, tezos_common_1.await_order)(provider.config, "".concat(provider.config.hen_objkts, ":").concat(order.token_id), op.hash, tezos_common_1.ProtocolActivity.LIST, seller, 20, 2000)];
                case 7:
                    order_id = _a.sent();
                    if (order_id == undefined || order_id.length == 0) {
                        throw new Error("Order was not found");
                    }
                    return [2 /*return*/, order_id];
                case 8:
                    e_1 = _a.sent();
                    console.log(JSON.stringify(e_1));
                    throw new Error("Could not submit order: " + e_1);
                case 9: return [2 /*return*/];
            }
        });
    });
}
exports.hen_swap = hen_swap;
