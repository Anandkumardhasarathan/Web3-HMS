import { AssetTypeV2, BundleItem, Part, Provider, TransactionArg } from "@rarible/tezos-common";
import BigNumber from "bignumber.js";
export declare type OrderFormV2 = {
    s_asset_contract: string;
    s_asset_token_id: BigNumber;
    s_sale_type: AssetTypeV2;
    s_sale_asset_contract?: string;
    s_sale_asset_token_id?: BigNumber;
    s_sale: RaribleSaleDataV2;
};
export declare type BundleOrderForm = {
    bundle: Array<BundleItem>;
    s_sale_type: AssetTypeV2;
    s_sale_asset_contract?: string;
    s_sale_asset_token_id?: BigNumber;
    s_sale: BundleSaleData;
};
export declare type BundleSaleData = {
    sale_origin_fees: Array<Part>;
    sale_payouts: Array<Part>;
    sale_amount: BigNumber;
    sale_qty: BigNumber;
    sale_start?: number;
    sale_end?: number;
    sale_max_fees_base_boint: number;
    sale_data_type?: string;
    sale_data?: string;
};
export declare type RaribleSaleDataV2 = {
    sale_origin_fees: Array<Part>;
    sale_payouts: Array<Part>;
    sale_amount: BigNumber;
    sale_asset_qty: BigNumber;
    sale_start?: number;
    sale_end?: number;
    sale_max_fees_base_boint: number;
    sale_data_type?: string;
    sale_data?: string;
};
export declare function sellV2(provider: Provider, order: OrderFormV2): Promise<string>;
export declare function sellBundle(provider: Provider, order: BundleOrderForm): Promise<import("@rarible/tezos-common").OperationResult | undefined>;
export declare function sell_v2_batch(provider: Provider, order_form: Array<OrderFormV2>): Promise<import("@rarible/tezos-common").OperationResult | undefined>;
export declare function sell_arg_v2(provider: Provider, order: OrderFormV2, processed_amount: BigNumber): TransactionArg;
export declare function bundle_sell_arg_v2(provider: Provider, order: BundleOrderForm, processed_amount: BigNumber): TransactionArg;
