import type * as EthereumProvider from "@rarible/ethereum-provider";
import type { Address } from "@rarible/types";
import type { ContractAbi } from "web3";
import type { NumberHexReceipt } from "../domain";
export declare function getTransactionReceiptEvents(receiptPromise: Promise<NumberHexReceipt>, address: Address, abi: ContractAbi): Promise<EthereumProvider.EthereumTransactionEvent[]>;
/**
 * Parse receipt events of the given contract.
 *
 * Web3 only parses the events of the contract that is returning the receipt. If
 * there are additional events logged by other contracts that were called during
 * the execution of the transaction, those will not be parsed automatically. For
 * those cases, additional parsing effort is required.
 *
 * @param {ContractAbi} abi The ABI of the contract.
 * @param {string} address The address of the contract.
 * @param {TxReceiptNumberFormatted} receipt The receipt to parse.
 * @returns {TxReceiptNumberFormatted} The patched receipt.
 */
export declare function parseReceiptEvents(abi: ContractAbi, address: Address, receipt: NumberHexReceipt): EthereumProvider.EthereumTransactionEvent[];
